---
import templates from 'src/content/json/themes/templates.json';
import Aside from 'src/components/Aside.astro';
import APIBlock from 'src/components/api/APIBlock.astro';
import APIURI from 'src/components/api/APIURI.astro';
import APIField from 'src/components/api/APIField.astro';
import { marked } from 'marked';

templates.sort((a, b) => { return a.fieldName.toUpperCase().localeCompare(b.fieldName.toUpperCase())}); 

const makeId = (name) => { return name.toLowerCase().replaceAll(' ', '-') };
---
{templates.filter((t) => t.onlyAPI === undefined).map((t) => 
<APIBlock>
  <h3 id={makeId(t.displayName)}>{t.displayName}</h3>
  {t.version && <Aside type="version">Available Since Version {t.version}.</Aside>}
  {t.path && <APIURI method="">{t.path}</APIURI>}
  {t.variables && <h3>Variables</h3>}
  {t.variables && t.variables.sort((a,b) => a.name.toUpperCase().localeCompare(b.name.toUpperCase())).map((tvar) => 
    <APIField name={tvar.name} type={tvar.type} since={tvar.since} deprecated={tvar.deprecated}>
      <span set:html={marked.parse(tvar.description)}></span>
      {tvar.removed && <br /><span class="text-orange-800">Removed in version {tvar.removed}</span>}
    </APIFIeld>
  )}
</APIBlock>
)}
