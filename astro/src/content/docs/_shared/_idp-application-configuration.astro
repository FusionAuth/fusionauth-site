---
const { login_message, identity_provider } = Astro.props;
---
<p>
To enable this identity provider for an application, find your application name in the <code>Applications</code> configuration section at the bottom of this panel. You will always see the <code>FusionAuth</code> application, this application represents the FusionAuth administrative user interface. If you wish to be able to log into FusionAuth with this provider, you may enable this application.
</p>

<p>
In the following screenshot you will see that we have enabled this login provider for the <code>Pied Piper</code> application and enabled <code>Create registration</code>. Enabling create registration means that a user does not need to be manually registered for the application prior to using this login provider.
</p>

<p>
For example, when a new user attempts to log into <code>Pied Piper</code> using {identity_provider}, if their user does not exist in FusionAuth it will be created dynamically, and if the <code>Create registration</code> toggle has been enabled, the user will also be registered for <code>Pied Piper</code> and assigned any default roles assigned by the application.
</p>

<p>
If you do not wish to automatically provision a user for this application when logging in with {identity_provider}, leave <code>Create registration</code> off. You will need to manually register a user for this application before they may <code>Sign in with {identity_provider}</code>.
</p>

<p>
  {login_message ? login_message : <span>That's it, now the <code>Sign in with {identity_provider}</code> button will show up on the login page for the Pied Piper application.</span>}
</p>

