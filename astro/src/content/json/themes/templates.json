[
  {
    "displayName": "Account index",
    "fieldName": "accountIndex",
    "description": "This is the self-service account landing page. An authenticated user may use this as a starting point for operations such as updating their profile or configuring multi-factor authentication.",
    "path": "/account",
    "version": "1.26.0",
    "variables": [
      {
        "name": "formConfigured",
        "type": "Boolean",
        "description": "A boolean that indicates if a Self-Service User form has been configured for this application."
      },
      {
        "name": "multiFactorAvailable",
        "type": "Boolean",
        "description": "A boolean that indicates if any multi-factor authentication methods have been enabled on the tenant."
      },
      {
        "name": "user",
        "type": "User",
        "description": "The User object corresponding to the authenticated user."
      },
      {
        "name": "webauthnAvailable",
        "type": "Boolean",
        "description": "A boolean that indicates if WebAuthn has been enabled on the tenant."
      }
    ]
  },
  {
    "displayName": "Account edit",
    "fieldName": "accountEdit",
    "description": "This page contains a form that enables authenticated users to update their profile.",
    "path": "/account/edit",
    "version": "1.26.0",
    "variables": [
      {
        "name": "fields",
        "type": "Map<Integer, List<FormField>>",
        "description": "The User fields to display in the form. Each key maps to form fields by section within a Self-Service User form."
      },
      {
        "name": "user",
        "type": "User",
        "description": "The User object corresponding to the authenticated user."
      }
    ]
  },
  {
    "displayName": "Account two-factor disable",
    "fieldName": "accountTwoFactorDisable",
    "description": "This page contains a form that accepts a verification code used to disable a multi-factor authentication method.",
    "path": "/account/two-factor/disable",
    "version": "1.26.0",
    "variables": [
      {
        "name": "email",
        "type": "String",
        "description": "The email address you are attempting to disable, this will be available when the `method` is `email`."
      },
      {
        "name": "method",
        "type": "String",
        "description": "The two-factor method you are disabling. The possible values are:\n* `authenticator`\n* `email`\n* `sms`\n"
      },
      {
        "name": "methodId",
        "type": "String",
        "description": "The actual Id of the two-factor method you are disabling."
      },
      {
        "name": "mobilePhone",
        "type": "String",
        "description": "The mobile phone you are attempting to disable, this will be available when the `method` is `sms`."
      },
      {
        "name": "user",
        "type": "User",
        "description": "The User object corresponding to the authenticated user."
      }
    ]
  },
  {
    "displayName": "Account two-factor enable",
    "fieldName": "accountTwoFactorEnable",
    "description": "This page contains a form that accepts a verification code used to enable a multi-factor authentication method. Additionally, this page displays recovery codes when a user enables multi-factor authentication for the first time.",
    "path": "/account/two-factor/enable",
    "version": "1.26.0",
    "variables": [
      {
        "name": "availableMethods",
        "type": "List<String>",
        "description": "The two-factor methods that are available to be configured."
      },
      {
        "name": "email",
        "type": "String",
        "description": "The email address if the method value is `email`."
      },
      {
        "name": "method",
        "type": "String",
        "description": "The two-factor method. The possible values are:\n* `authenticator`\n* `email`\n* `sms`\n"
      },
      {
        "name": "mobilePhone",
        "type": "String",
        "description": "The mobile phone if the method is `sms`."
      },
      {
        "name": "recoveryCodes",
        "type": "List<String>",
        "description": "The recovery codes when a user configured multi-factor authentication for the first time. This will be available after a method has been successfully enabled and this template is rendered a second time. If you already have one method enabled, the recovery codes will not be displayed."
      },
      {
        "name": "secret",
        "type": "String",
        "description": "A Base64 encoded secret for the `authenticator` method."
      },
      {
        "name": "secretBase32Encoded",
        "type": "String",
        "description": "A Base32 encoded form of the provided secret for the `authenticator` method."
      },
      {
        "name": "user",
        "type": "User",
        "description": "The User object corresponding to the authenticated user."
      }
    ]
  },
  {
    "displayName": "Account two-factor index",
    "fieldName": "accountTwoFactorIndex",
    "description": "This page displays an authenticated user's configured multi-factor authentication methods. Additionally, it provides links to enable and disable a method.",
    "path": "/account/two-factor",
    "version": "1.26.0",
    "variables": [
      {
        "name": "user",
        "type": "User",
        "description": "The User object corresponding to the authenticated user."
      }
    ]
  },
  {
    "displayName": "Account add WebAuthn passkey",
    "fieldName": "accountWebAuthnAdd",
    "description": "This page contains a form that allows a user to register a new WebAuthn passkey.",
    "path": "/account/webauthn/add",
    "version": "1.41.0",
    "variables": [
      {
        "name": "user",
        "type": "User",
        "description": "The User object corresponding to the authenticated user."
      }
    ]
  },
  {
    "displayName": "Account delete WebAuthn passkey",
    "fieldName": "accountWebAuthnDelete",
    "description": "This page contains a form that allows a user to delete a WebAuthn passkey.",
    "path": "/account/webauthn/delete",
    "version": "1.41.0",
    "variables": [
      {
        "name": "credential",
        "type": "Object",
        "description": "The WebAuthn passkey the user is deleting. See the [WebAuthn API](/docs/apis/webauthn) for details on this object."
      }
    ]
  },
  {
    "displayName": "Account WebAuthn index",
    "fieldName": "accountWebAuthnIndex",
    "description": "This page displays an authenticated user's registered WebAuthn passkeys. Additionally, it provides links to delete an existing passkey and register a new passkey.",
    "path": "/account/webauthn/",
    "version": "1.41.0",
    "variables": [
      {
        "name": "webAuthnCredentials",
        "type": "List<Object>",
        "description": "The list of registered WebAuthn passkeys for the current user. See the [WebAuthn API](/docs/apis/webauthn) for details on this object."
      }
    ]
  },
  {
    "displayName": "Confirmation required",
    "fieldName": "confirmationRequired",
    "description": "This page is displayed when a user attempts to complete an email based workflow that did not begin in the same browser. For example, if the user starts a forgot password workflow, and then opens the link in a separate browser the user will be shown this panel.",
    "path": "/confirmation-required",
    "version": "1.49.0",
    "variables": [
      {
        "name": "confirmationRequiredReason",
        "type": "String",
        "description": "The reason the user is being prompted for confirmation."
      },
      {
        "name": "confirmationRequiredActionURI",
        "type": "String",
        "description": "The URI to return to once confirmation has been provided."
      }
    ]
  },
  {
    "displayName": "Email verification complete",
    "fieldName": "emailComplete",
    "description": "This page is used after a user has verified their email address by clicking the URL in the email. After FusionAuth has updated their user object to indicate that their email was verified, the browser is redirected to this page.",
    "path": "/email/complete"
  },
  {
    "displayName": "Email verification re-sent",
    "fieldName": "emailSent",
    "description": "This page is used after a user has asked for the verification email to be resent. This can happen if the URL in the email expired and the user clicked it. In this case, the user can provide their email address again and FusionAuth will resend the email. After the user submits their email and FusionAuth re-sends a verification email to them, the browser is redirected to this page.",
    "path": "/email/sent",
    "variables": [
      {
        "name": "email",
        "type": "String",
        "description": "The email address that requested to receive a new email verification request."
      }
    ]
  },
  {
    "displayName": "Email verification required",
    "fieldName": "emailVerificationRequired",
    "description": "This page is rendered when a user is required to verify their email address prior to being allowed to proceed with login. This occurs when `Unverified behavior` is set to `Gated` in email verification settings on the Tenant.",
    "path": "/email/verification-required",
    "version": "1.27.0",
    "variables": [
      {
        "name": "allowEmailChange",
        "type": "Boolean",
        "description": "When `true`, an additional form is displayed to allow the user to update their email address. This is intended to assist the user if they mis-typed their email address previously. This occurs when `Allow email change when gated` is enabled under email verification settings on the Tenant."
      },
      {
        "name": "collectVerificationCode",
        "type": "Boolean",
        "description": "When `true`, a form input is displayed to allow a user to enter the verification code. This occurs when `Verification strategy` is set to `FormField` under email verification settings on the Tenant."
      },
      {
        "name": "email",
        "type": "String",
        "description": "The current value of the user's email address. This may be useful to indicate to the user which email address was sent a verification code."
      },
      {
        "name": "showCaptcha",
        "type": "Boolean",
        "description": "A boolean that controls whether or not to include captcha scripts and show the captcha challenge (or message for invisible captcha).",
        "since": "1.30.0"
      },
      {
        "name": "verificationId",
        "type": "String",
        "description": "The verification Id that was included on as a URL parameter. This is the high entropy value that will be paired with the low entropy one time code to complete email verification."
      }
    ]
  },
  {
    "displayName": "Email verification",
    "fieldName": "emailVerify",
    "description": "This page is rendered when a user clicks the URL from the verification email and the `verificationId` has expired. FusionAuth expires `verificationId` after a period of time (which is configurable). If the user has a URL from the verification email that has expired, this page will be rendered and the error will be displayed to the user.",
    "path": "/email/verify",
    "variables": [
      {
        "name": "postMethod",
        "type": "Boolean",
        "description": "Defaults to `true` on this page."
      },
      {
        "name": "showCaptcha",
        "type": "Boolean",
        "description": "A boolean that controls whether or not to include captcha scripts and show the captcha challenge (or message for invisible captcha).",
        "since": "1.30.0"
      },
      {
        "name": "verificationId",
        "type": "String",
        "description": "The verification Id that was included on as a URL parameter but was invalid. This page does a redirect if the verificationId is valid."
      }
    ]
  },
  {
    "displayName": "Index",
    "fieldName": "index",
    "description": "This is the root landing page. This page is available to unauthenticated users and will be displayed whenever someone navigates to the FusionAuth host's root page. Prior to version `1.27.0`, navigating to this URL would redirect to `/admin` and would subsequently render the FusionAuth admin login page.",
    "path": "/",
    "version": "1.27.0"
  },
  {
    "displayName": "OAuth authorize",
    "fieldName": "oauth2Authorize",
    "description": "This is the main login page for FusionAuth and is used for all interactive OAuth2 and OpenID Connect workflows.",
    "path": "/oauth2/authorize",
    "variables": [
      {
        "name": "bootStrapWebauthnEnabled",
        "type": "Boolean",
        "description": "A boolean that indicates if the WebAuthn bootstrap workflow is enabled for the current application.",
        "since": "1.41.0"
      },
      {
        "name": "code_challenge",
        "type": "String",
        "description": "The OAuth v2.0 `code_challenge` parameter."
      },
      {
        "name": "code_challenge_method",
        "type": "String",
        "description": "The OAuth v2.0 `code_challenge_method` parameter used in conjunction with PKCE. Can be either `plain` or `S256`."
      },
      {
        "name": "devicePendingIdPLink",
        "type": "Object",
        "description": "The PendingIdpLink that is generated when using the device OAuth flow. This object provides information about the current state of the user and the identity provider prior to completing the link. This is available when linking or registering a device ( i.e. Playstation or XBox)."
      },
      {
        "name": "devicePendingIdPLink.displayName",
        "type": "String",
        "description": "A human readable name for this link to help you identify this link. This value will generally be an email address, or username."
      },
      {
        "name": "devicePendingIdPLink.email",
        "type": "String",
        "description": "The email address of the FusionAuth user being linked to the identity provider."
      },
      {
        "name": "devicePendingIdPLink.identityProviderLinks",
        "type": "List<Object>",
        "description": "See the [Link API](/docs/apis/identity-providers/links) for details on this object."
      },
      {
        "name": "devicePendingIdPLink.identityProviderName",
        "type": "String",
        "description": "The name of the identity provider that is being linked to."
      },
      {
        "name": "devicePendingIdPLink.identityProviderType",
        "type": "String",
        "description": "The type of identity provider that is being linked to."
      },
      {
        "name": "devicePendingIdPLink.identityProviderUserId",
        "type": "String",
        "description": "The Id for the User that is provided by the identity provider."
      },
      {
        "name": "devicePendingIdPLink.linkLimitExceeded",
        "type": "Boolean",
        "description": "A boolean that indicates if a user has exceeded the maximum number of links allowed."
      },
      {
        "name": "devicePendingIdPLink.user",
        "type": "User",
        "description": "The FusionAuth user that is linked to the identity provider."
      },
      {
        "name": "devicePendingIdPLink.username",
        "type": "String",
        "description": "The username of the FusionAuth user being linked to the identity provider."
      },
      {
        "name": "hasDomainBasedIdentityProviders",
        "type": "Boolean",
        "description": "A boolean that indicates if there are domain-based identity providers configured. These identity providers use the user's email address to determine if an external IdP should be used to log the user in."
      },
      {
        "name": "identityProviders",
        "type": "Map<String, List<Object>>",
        "description": "A map of the configured identity providers for the Application the user is logging into. The key into the map is the type of the identity provider (i.e. `Facebook` or `OpenIDConnect`). The value is a list of all of the configured identity providers for that type.\n+\n**NOTE:** This map does not contain any \"domain-based\" identity providers since those are handled differently using just the Email input field to start and then possibly redirecting the browser to the external IdP login page.\n"
      },
      {
        "name": "loginId",
        "type": "String",
        "description": "The value from the `loginId` form field. This is either the username or the email of the user attempting to log into FusionAuth."
      },
      {
        "name": "metaData",
        "type": "MetaData",
        "description": "Metadata on when the JWT Refresh Token was created"
      },
      {
        "name": "nonce",
        "type": "String",
        "description": "The OpenID Connect `nonce` request parameter."
      },
      {
        "name": "passwordlessEnabled",
        "type": "Boolean",
        "description": "A boolean that controls whether or not to to utilize a passwordless flow."
      },
      {
        "name": "pendingIdpLink",
        "type": "Object",
        "description": "This is the unique value when creating a link between a unique UUID returned by the IdP and a new or existing FusionAuth user."
      },
      {
        "name": "pendingIdpLink.displayName",
        "type": "String",
        "description": "A human readable name for this link to help you identify this link. This value will generally be an email address, or username."
      },
      {
        "name": "pendingIdpLink.email",
        "type": "String",
        "description": "The email address of the FusionAuth user being linked to the identity provider."
      },
      {
        "name": "pendingIdpLink.identityProviderLinks",
        "type": "List<Object>",
        "description": "See the [Link API](/docs/apis/identity-providers/links) for details on this object."
      },
      {
        "name": "pendingIdpLink.identityProviderName",
        "type": "String",
        "description": "The name of the identity provider that is being linked to."
      },
      {
        "name": "pendingIdpLink.identityProviderType",
        "type": "String",
        "description": "The type of identity provider that is being linked to."
      },
      {
        "name": "pendingIdpLink.identityProviderUserId",
        "type": "String",
        "description": "The Id for the User that is provided by the identity provider."
      },
      {
        "name": "pendingIdpLink.linkLimitExceeded",
        "type": "Boolean",
        "description": "A boolean that indicates if a user has exceeded the maximum number of links allowed."
      },
      {
        "name": "pendingIdpLink.user",
        "type": "User",
        "description": "The FusionAuth user that is linked to the identity provider."
      },
      {
        "name": "pendingIdpLink.username",
        "type": "String",
        "description": "The username of the FusionAuth user being linked to the identity provider."
      },
      {
        "name": "redirect_uri",
        "type": "String",
        "description": "The OAuth v2.0 `redirect_uri` parameter. This is the URI that FusionAuth will redirect the user to once they have successfully logged in."
      },
      {
        "name": "rememberDevice",
        "type": "String",
        "description": "This value is used to record if ths user would like to have their device remembered on the next login."
      },
      {
        "name": "response_type",
        "type": "String",
        "description": "The OAuth v2.0 `response_type` parameter."
      },
      {
        "name": "scope",
        "type": "String",
        "description": "The OAuth v2.0 `scope` parameter."
      },
      {
        "name": "showCaptcha",
        "type": "Boolean",
        "since": "1.30.0",
        "description": "A boolean that controls whether or not to include captcha scripts and show the captcha challenge (or message for invisible captcha)."
      },
      {
        "name": "showPasswordField",
        "type": "Boolean",
        "description": "A boolean that controls whether the `password` field is shown if there are domain-based identity providers. If there are domain based identity providers and the user types in an email address that is not managed by the identity provider, FusionAuth will then re-render this template with this variable set to `true`. This will indicate that the password field should be shown so that the user can complete their login.\nIf you need an example of this behavior, check out the login page at https://www.pivotaltracker.com/signin.\n"
      },
      {
        "name": "showWebAuthnReauthLink",
        "type": "Boolean",
        "description": "A boolean that indicates if the WebAuthn re-authentication workflow is enabled for the current application, and there are re-authentication passkeys available on the current device.",
        "since": "1.41.0"
      },
      {
        "name": "state",
        "type": "String",
        "description": "The OAuth v2.0 `state` parameter."
      },
      {
        "name": "timezone",
        "type": "String",
        "description": "The timezone that the user is in. This is normally guessed by the timezone JavaScript library (or something similar) and then stored in a hidden input field on the login form."
      },
      {
        "name": "user_code",
        "type": "String",
        "description": "The user code provided by the user in the form, or if the `user_code` was provided on the URL using a request parameter such as `?user_code=123` this value will be provided in the template using this variable."
      },
      {
        "name": "version",
        "type": "String",
        "description": "The version."
      }
    ]
  },
  {
    "displayName": "OAuth authorized not registered",
    "fieldName": "oauth2AuthorizedNotRegistered",
    "description": "This page is rendered when a user is not registered and the Application configuration requires registration before FusionAuth will complete the redirect.",
    "path": "/oauth2/authorized-not-registered",
    "version": "1.28.0",
    "variables": null
  },
  {
    "displayName": "OAuth child registration not allowed",
    "fieldName": "oauth2ChildRegistrationNotAllowed",
    "description": "This page contains a form where a child must provide their parent's email address to ask their parent to create an account for them in a Consent workflow.",
    "path": "/oauth2/child-registration-not-allowed",
    "variables": [
      {
        "name": "parentEmail",
        "type": "String",
        "description": "The parent’s email address provided in the input field of the form."
      }
    ]
  },
  {
    "displayName": "OAuth child registration not allowed complete",
    "fieldName": "oauth2ChildRegistrationNotAllowedComplete",
    "description": "This page is rendered after a child provides their parent's email address for parental consent in a Consent workflow.",
    "path": "/oauth2/child-registration-not-allowed-complete"
  },
  {
    "displayName": "OAuth complete registration",
    "fieldName": "oauth2CompleteRegistration",
    "description": "This page contains a form that is used for users that have accounts but might be missing required fields.",
    "path": "/oauth2/complete-registration"
  },
  {
    "displayName": "OAuth consent prompt",
    "fieldName": "oauth2Consent",
    "description": "This page contains a form for capturing a user's OAuth scope consent choices. If there are no scopes that require a prompt, the user is redirected automatically.",
    "path": "/oauth2/consent",
    "version": "1.50.0",
    "variables": [
      {
        "name": "action",
        "type":"String",
        "description": "The action the user selected on the consent prompt. The value should be `allow` if the user made consent selections and wants to continue or `cancel` if they have decided not to continue."
      },
      {
        "name": "requiredScopes",
        "type": "List<Object>",
        "description": "The list of OAuth scopes on the request that require user consent. See the [Scope API](/docs/apis/scopes#create-an-oauth-scope) for details on this object."
      },
      {
        "name": "optionalScopes",
        "type": "List<Object>",
        "description": "The list of OAuth scopes on the request with optional user consent. See the [Scope API](/docs/apis/scopes#create-an-oauth-scope) for details on this object."
      },
      {
        "name": "scopeConsents",
        "type": "Map<String, boolean>",
        "description": "A map of OAuth scope consent choices made by the user. The key into the map is the OAuth scope name. The value should be `true` if the user has consented to the scope or `false` if they have declined."
      },
      {
        "name": "unknownScopes",
        "type": "List<String>",
        "description": "The list of unknown OAuth scope names on the request if the application is configured to `Allow` unknown scopes."
      }
    ]
  },
  {
    "displayName": "OAuth device",
    "fieldName": "oauth2Device",
    "description": "This page contains a form for accepting an end user's short code for the interactive portion of the OAuth Device Authorization Grant workflow.",
    "path": "/oauth2/device",
    "version": "1.11.0",
    "variables": [
      {
        "name": "devicePendingIdPLink",
        "type": "Object",
        "description": "The PendingIdpLink that is generated when using the device OAuth flow. This object provides information about the current state of the user and the identity provider prior to completing the link. This is available when linking or registering a device ( i.e. Playstation or XBox)."
      },
      {
        "name": "devicePendingIdPLink.displayName",
        "type": "String",
        "description": "A human readable name for this link to help you identify this link. This value will generally be an email address, or username."
      },
      {
        "name": "devicePendingIdPLink.email",
        "type": "String",
        "description": "The email address of the FusionAuth user being linked to the identity provider."
      },
      {
        "name": "devicePendingIdPLink.identityProviderLinks",
        "type": "List<Object>",
        "description": "See the [Link API](/docs/apis/identity-providers/links) for details on this object."
      },
      {
        "name": "devicePendingIdPLink.identityProviderName",
        "type": "String",
        "description": "The name of the identity provider that is being linked to."
      },
      {
        "name": "devicePendingIdPLink.identityProviderType",
        "type": "String",
        "description": "The type of identity provider that is being linked to."
      },
      {
        "name": "devicePendingIdPLink.identityProviderUserId",
        "type": "String",
        "description": "The Id for the User that is provided by the identity provider."
      },
      {
        "name": "devicePendingIdPLink.linkLimitExceeded",
        "type": "Boolean",
        "description": "A boolean that indicates if a user has exceeded the maximum number of links allowed."
      },
      {
        "name": "devicePendingIdPLink.user",
        "type": "User",
        "description": "The FusionAuth user that is linked to the identity provider."
      },
      {
        "name": "devicePendingIdPLink.username",
        "type": "String",
        "description": "The username of the FusionAuth user being linked to the identity provider."
      },
      {
        "name": "interactive_user_code",
        "type": "String",
        "description": "The user code provided by the user in the form, or if the `user_code` was provided on the URL using a request parameter such as `?user_code=123` this value will be provided in the template using this variable."
      },
      {
        "name": "userCodeLength",
        "type": "Integer",
        "description": "The length of the interactive user code. This value may be used to build the correct number of input fields for the interactive code."
      }
    ]
  },
  {
    "displayName": "OAuth device complete",
    "fieldName": "oauth2DeviceComplete",
    "description": "This page contains a complete message indicating the device authentication has completed.",
    "path": "/oauth2/device-complete",
    "version": "1.12.0",
    "variables": [
      {
        "name": "completedLinks",
        "type": "List<PendingIdPLink>",
        "since": "1.30.0",
        "description": "An optional parameter that may be present if the completion of this device request resulted in one or more Identity Provider links being established to this user.\n+\nThis variable may be helpful if you wish to communicate to the user which links have been completed.\n"
      }
    ]
  },
  {
    "displayName": "OAuth error",
    "fieldName": "oauth2Error",
    "rawDescription": "This page is used if the user starts or is in the middle of the OAuth workflow and any type of error occurs. This could be caused by the user messing with the URL or internally some type of information wasn't passed between the OAuth endpoints correctly. For example, if you are federating login to an external IdP and that IdP does not properly echo the state parameter, FusionAuth’s OAuth workflow will break and this page will be displayed.",
    "path": "/oauth2/error",
    "variables": [
      {
        "name": "oauthJSONError",
        "type": "String",
        "description": "The OAuth error JSON that could be helpful for developers while debugging."
      }
    ]
  },
  {
    "displayName": "OAuth logout",
    "fieldName": "oauth2Logout",
    "description": "This page is used if the user initiates an OAuth logout. This page causes the user to be logged out of all associated applications or just the initiating application, as configured, via a front-channel mechanism before being redirected.",
    "path": "/oauth2/logout",
    "variables": [
      {
        "name": "allLogoutURLs",
        "type": "Set<String>",
        "description": "A set of URLs associated with all of the applications in the tenant to log out the user."
      },
      {
        "name": "registeredLogoutURLs",
        "type": "Set<String>",
        "description": "A set of URLs associated with all of the applications the user is registered for to log out the user."
      },
      {
        "name": "redirectURL",
        "type": "String",
        "description": "The URL to be redirected to after the front-channel logout occur."
      }
    ]
  },
  {
    "displayName": "OAuth passwordless",
    "fieldName": "oauth2Passwordless",
    "description": "This page is rendered when the user starts the passwordless login workflow. The page renders the form where the user types in their email address.",
    "path": "/oauth2/passwordless",
    "variables": [
      {
        "name": "redirect_uri",
        "type": "String",
        "description": "The OAuth v2.0 `redirect_uri` parameter. This is the URI that FusionAuth will redirect the user to once they have successfully logged in."
      },
      {
        "name": "response_type",
        "type": "String",
        "description": "The OAuth v2.0 `response_type` parameter."
      },
      {
        "name": "scope",
        "type": "String",
        "description": "The OAuth v2.0 `scope` parameter."
      },
      {
        "name": "showCaptcha",
        "type": "Boolean",
        "since": "1.30.0",
        "description": "A boolean that controls whether or not to include captcha scripts and show the captcha challenge (or message for invisible captcha)."
      },
      {
        "name": "state",
        "type": "String",
        "description": "The OAuth v2.0 `state` parameter."
      },
      {
        "name": "timezone",
        "type": "String",
        "description": "The timezone that the user is in. This is normally guessed by the timezone JavaScript library (or something similar) and then stored in a hidden input field on the login form."
      }
    ]
  },
  {
    "displayName": "OAuth register",
    "fieldName": "oauth2Register",
    "description": "This page is used to register or sign up the user for the application when self-service registration is enabled.",
    "path": "/oauth2/register",
    "variables": [
      {
        "name": "collectBirthDate",
        "type": "Boolean",
        "description": "Whether or not to collect a birth date for a Consent workflow."
      },
      {
        "name": "hideBirthDate",
        "type": "Boolean",
        "description": "Whether or not to render a hidden field for passing along the birthdate in the form."
      },
      {
        "name": "parentEmailRequired",
        "type": "Boolean",
        "description": "Whether or not a parent's email address is required for a Consent Workflow."
      },
      {
        "name": "passwordValidationRules",
        "type": "Object",
        "description": "An object that contains the password validation rules. The object fields are defined in keys to this object, as defined below."
      },
      {
        "name": "passwordValidationRules.maxLength",
        "type": "Integer",
        "description": "The maximum length of a password."
      },
      {
        "name": "passwordValidationRules.minLength",
        "type": "Integer",
        "description": "The minimum length of a password."
      },
      {
        "name": "passwordValidationRules.rememberPreviousPasswords.count",
        "type": "Integer",
        "description": "The number of previous passwords the user is not allowed to re-use."
      },
      {
        "name": "passwordValidationRules.requireMixedCase",
        "type": "Boolean",
        "description": "Whether or not the user must use upper and lower-cased letter."
      },
      {
        "name": "passwordValidationRules.requireNonAlpha",
        "type": "Boolean",
        "description": "Whether or not the user must use at least one non-alphabetic character in their password."
      },
      {
        "name": "passwordValidationRules.requireNumber",
        "type": "Boolean",
        "description": "Whether or not the user must use at least one numeric character in their password."
      },
      {
        "name": "showCaptcha",
        "type": "Boolean",
        "since": "1.30.0",
        "description": "A boolean that controls whether or not to include captcha scripts and show the captcha challenge (or message for invisible captcha)."
      }
    ]
  },
  {
    "displayName": "OAuth start IdP link",
    "fieldName": "oauth2StartIdPLink",
    "description": "This page is used if the linking strategy of the Identity Provider is set to create a pending link. The user is presented with the option to link their account with an existing FusionAuth user account or create a new FusionAuth user.",
    "path": "/oauth2/start-idp-link",
    "version": "1.28.0",
    "variables": [
      {
        "name": "devicePendingIdPLink",
        "type": "Object",
        "description": "The PendingIdpLink that is generated when using the device OAuth flow. This object provides information about the current state of the user and the identity provider prior to completing the link. This is available when linking or registering a device ( i.e. Playstation or XBox)."
      },
      {
        "name": "devicePendingIdPLink.displayName",
        "type": "String",
        "description": "A human readable name for this link to help you identify this link. This value will generally be an email address, or username."
      },
      {
        "name": "devicePendingIdPLink.email",
        "type": "String",
        "description": "The email address of the FusionAuth user being linked to the identity provider."
      },
      {
        "name": "devicePendingIdPLink.identityProviderLinks",
        "type": "List<Object>",
        "description": "See the [Link API](/docs/apis/identity-providers/links) for details on this object."
      },
      {
        "name": "devicePendingIdPLink.identityProviderName",
        "type": "String",
        "description": "The name of the identity provider that is being linked to."
      },
      {
        "name": "devicePendingIdPLink.identityProviderType",
        "type": "String",
        "description": "The type of identity provider that is being linked to."
      },
      {
        "name": "devicePendingIdPLink.identityProviderUserId",
        "type": "String",
        "description": "The Id for the User that is provided by the identity provider."
      },
      {
        "name": "devicePendingIdPLink.linkLimitExceeded",
        "type": "Boolean",
        "description": "A boolean that indicates if a user has exceeded the maximum number of links allowed."
      },
      {
        "name": "devicePendingIdPLink.user",
        "type": "User",
        "description": "The FusionAuth user that is linked to the identity provider."
      },
      {
        "name": "devicePendingIdPLink.username",
        "type": "String",
        "description": "The username of the FusionAuth user being linked to the identity provider."
      },
      {
        "name": "pendingIdpLink",
        "type": "Object",
        "description": "This is the unique value when creating a link between a unique UUID returned by the IdP and a new or existing FusionAuth user."
      },
      {
        "name": "pendingIdpLink.displayName",
        "type": "String",
        "description": "A human readable name for this link to help you identify this link. This value will generally be an email address, or username."
      },
      {
        "name": "pendingIdpLink.email",
        "type": "String",
        "description": "The email address of the FusionAuth user being linked to the identity provider."
      },
      {
        "name": "pendingIdpLink.identityProviderLinks",
        "type": "List<Object>",
        "description": "See the [Link API](/docs/apis/identity-providers/links) for details on this object."
      },
      {
        "name": "pendingIdpLink.identityProviderName",
        "type": "String",
        "description": "The name of the identity provider that is being linked to."
      },
      {
        "name": "pendingIdpLink.identityProviderType",
        "type": "String",
        "description": "The type of identity provider that is being linked to."
      },
      {
        "name": "pendingIdpLink.identityProviderUserId",
        "type": "String",
        "description": "The Id for the User that is provided by the identity provider."
      },
      {
        "name": "pendingIdpLink.linkLimitExceeded",
        "type": "Boolean",
        "description": "A boolean that indicates if a user has exceeded the maximum number of links allowed."
      },
      {
        "name": "pendingIdpLink.user",
        "type": "User",
        "description": "The FusionAuth user that is linked to the identity provider."
      },
      {
        "name": "pendingIdpLink.username",
        "type": "String",
        "description": "The username of the FusionAuth user being linked to the identity provider."
      },
      {
        "name": "registrationEnabled",
        "type": "Boolean",
        "description": "A boolean that indicates if the application is configured for self registration."
      }
    ]
  },
  {
    "displayName": "OAuth two-factor",
    "fieldName": "oauth2TwoFactor",
    "description": "This page is used if the user has two-factor authentication enabled or two factor authentication is required and they need to type in their code again. FusionAuth will properly handle the processing on the back end. This page contains the form that the user will put their code into.",
    "path": "/oauth2/two-factor",
    "variables": [
      {
        "name": "code",
        "type": "String",
        "description": "The value of the `code` form field on the page. This will be available only after the user has submitted the form."
      },
      {
        "name": "method",
        "type": "TwoFactorMethod",
        "since": "1.26.0",
        "description": "The currently selected two-factor method. This may be helpful if you want to communicate to the end user their currently selected method.\n+\nFor example, `method.method` will indicate the type of method, `authenticator`, `email` or `sms`. Based upon the method, the `method.email` or `method.mobilePhone` will indicate which transport is being used to send the user a code.\n"
      },
      {
        "name": "methodId",
        "type": "String",
        "since": "1.26.0",
        "description": "The method Id. This Id, if defined, will represent the currently selected method, or last used method."
      },
      {
        "name": "pushEnabled",
        "type": "Boolean",
        "deprecated": true,
        "removed": "1.26.0",
        "description": "Whether or not FusionAuth has pushed (SMS) enabled for two-factor."
      },
      {
        "name": "pushPreferred",
        "type": "Boolean",
        "deprecated": true,
        "removed": "1.26.0",
        "description": "Whether or not the user prefers push (SMS) for two-factor."
      },
      {
        "name": "redirect_uri",
        "type": "String",
        "description": "The OAuth v2.0 `redirect_uri` parameter. This is the URI that FusionAuth will redirect the user to once they have successfully logged in."
      },
      {
        "name": "resendCode",
        "type": "Boolean",
        "deprecated": true,
        "removed": "1.26.0",
        "description": "Whether or not the user wants the code to be resent to their phone (valid for push two-factor)."
      },
      {
        "name": "response_type",
        "type": "String",
        "description": "The OAuth v2.0 `response_type` parameter."
      },
      {
        "name": "scope",
        "type": "String",
        "description": "The OAuth v2.0 `scope` parameter."
      },
      {
        "name": "showResendOrSelectMethod",
        "type": "Boolean",
        "description": "Whether or not to display a link to allow the user to select a different method or resend the code. This value will be `true` when more than one option exist for the user to select, or the available method is `email` or `sms` which will allow for a resend option."
      },
      {
        "name": "trustComputer",
        "type": "Boolean",
        "description": "The value of the \"Trust this computer\" form field. This will be available only after the user has submitted the form. Otherwise, it defaults to false. When the user checks this box, a cookie is dropped so that two-factor authentication can be skipped on this computer."
      },
      {
        "name": "state",
        "type": "String",
        "description": "The OAuth v2.0 `state` parameter."
      },
      {
        "name": "timezone",
        "type": "String",
        "description": "The timezone that the user is in. This is normally guessed by the timezone JavaScript library (or something similar) and then stored in a hidden input field on the login form."
      },
      {
        "name": "twoFactorId",
        "type": "String",
        "description": "The unique Id of the current multi-factor authentication attempt."
      },
      {
        "name": "userCanReceivePush",
        "type": "Boolean",
        "deprecated": true,
        "removed": "1.26.0",
        "description": "Whether or not the user is capable of receiving push notifications for two-factor. This means that the user has a mobile phone number."
      }
    ]
  },
  {
    "displayName": "OAuth two-factor enable",
    "fieldName": "oauth2TwoFactorEnable",
    "description": "This page contains a form providing a user with the Oauth2 two-factor enable form",
    "path": "/oauth2/two-factor-enable",
    "version": "1.42.0",
    "variables": [
      {
        "name": "availableMethods",
        "type": "List<String>",
        "description": "The two-factor methods that are available to be configured."
      },
      {
        "name": "code",
        "type": "String",
        "description": "Returned when `twoFactorId` is provided to complete Two Factor login."
      },
      {
        "name": "email",
        "type": "String",
        "description": "The email address if the method value is `email`."
      },
      {
        "name": "method",
        "type": "String",
        "description": "The two-factor method. The possible values are:\n* `authenticator`\n* `email`\n* `sms`\n"
      },
      {
        "name": "mobilePhone",
        "type": "String",
        "description": "The mobile phone if the method is `sms`."
      },
      {
        "name": "secret",
        "type": "String",
        "description": "A base64 encoded version of the secret that can be used to build a QR code when using the `authenticator` method."
      },
      {
        "name": "secretBase32Encoded",
        "type": "String",
        "description": "A base32 encoded version of the secret that can be used to build a QR code when using the `authenticator` method."
      }
    ]
  },
  {
    "displayName": "OAuth two-factor enable complete",
    "fieldName": "oauth2TwoFactorEnableComplete",
    "description": "This page contains a form providing a user with the Oauth2 two-factor enable complete form",
    "path": "/oauth2/two-factor-enable-complete",
    "version": "1.42.0",
    "variables": [
      {
        "name": "recoveryCodes",
        "type": "List<String>",
        "description": "The recovery codes when a user configured multi-factor authentication for the first time. This will be available after a method has been successfully enabled and this template is rendered a second time. If you already have a method enabled, the recovery codes will not be displayed."
      }
    ]
  },
  {
    "displayName": "OAuth two-factor methods",
    "fieldName": "oauth2TwoFactorMethods",
    "description": "This page contains a form providing a user with their configured multi-factor authentication options that they may use to complete the authentication challenge.",
    "path": "/oauth2/two-factor-methods",
    "version": "1.26.0",
    "variables": [
      {
        "name": "availableMethodsMap",
        "type": "Map<String, TwoFactorMethod>",
        "description": "A map of two-factor methods that the user has configured. The key into the map is the unique `methodId`. The value is the two-factor method."
      },
      {
        "name": "methodId",
        "type": "String",
        "description": "The method Id. This Id, if defined, will represent the currently selected method, or last used method."
      },
      {
        "name": "recoverCodesAvailable",
        "type": "Integer",
        "description": "The total number of recovery codes that the user has available to use."
      },
      {
        "name": "timezone",
        "type": "String",
        "description": "The timezone that the user is in. This is normally guessed by the timezone JavaScript library (or something similar) and then stored in a hidden input field on the login form."
      },
      {
        "name": "twoFactorId",
        "type": "String",
        "description": "The unique Id of the current multi-factor authentication attempt."
      }
    ]
  },
  {
    "displayName": "OAuth wait",
    "fieldName": "oauth2Wait",
    "description": "This page is rendered when FusionAuth is waiting for an external provider to complete an out of band authentication request. For example, during a HYPR login this page will be displayed until the user completes authentication.",
    "path": "/oauth2/wait",
    "version": "1.12.0",
    "variables": [
      {
        "name": "code",
        "type": "String",
        "description": "The FusionAuth temporary code used to complete this external authentication request."
      }
    ]
  },
  {
    "displayName": "OAuth WebAuthn",
    "fieldName": "oauth2WebAuthn",
    "description": "This page contains a form where a user can enter their `loginId` (username or email address) to authenticate with one of their registered WebAuthn passkeys. This page uses the WebAuthn bootstrap workflow.",
    "path": "/oauth2/webauthn",
    "version": "1.41.0",
    "variables": [
      {
        "name": "showCaptcha",
        "type": "Boolean",
        "description": "A boolean that controls whether or not to include captcha scripts and show the captcha challenge (or message for invisible captcha)."
      }
    ]
  },
  {
    "displayName": "OAuth WebAuthn Reauth",
    "fieldName": "oauth2WebAuthnReauth",
    "description": "This page contains a form that lists the WebAuthn passkeys currently available for re-authentication. A user can select one of the listed passkeys to authenticate using the corresponding passkey and user account.",
    "path": "/oauth2/webauthn-reauth",
    "version": "1.41.0",
    "variables": [
      {
        "name": "webAuthnCredentials",
        "type": "List<Object>",
        "description": "A list of the WebAuthn passkeys available to complete re-authentication on the current device. See the [WebAuthn API](/docs/apis/webauthn) for details on this object."
      }
    ]
  },
  {
    "displayName": "OAuth WebAuthn Reauth Enable",
    "fieldName": "oauth2WebAuthnReauthEnable",
    "description": "This page contains two forms. One allows the user to select one of their existing WebAuthn passkeys to use for re-authentication. The other allows the user to register a new WebAuthn passkey for re-authentication.",
    "path": "/oauth2/webauthn-reauth-enable",
    "version": "1.41.0",
    "variables": [
      {
        "name": "webAuthnCredentials",
        "type": "List<Object>",
        "description": "A list of the current user's registered WebAuthn passkeys that may be suitable for use in the re-authentication workflow. See the [WebAuthn API](/docs/apis/webauthn) for details on this object."
      }
    ]
  },
  {
    "displayName": "OAuth Change password form",
    "fieldName": "passwordChange",
    "description": "This page is used if the user is required to change their password or if they have requested a password reset. This page contains the form that allows the user to provide a new password.",
    "path": "/password/change",
    "variables": [
      {
        "name": "changePasswordId",
        "type": "String",
        "description": "The id that was sent to the user (usually via email) that allows them to change their password. Normally, this id is included in the email template for the `forgot password` workflow and when the user clicks the link in the email, they are taken to this page with this parameter on the URL."
      },
      {
        "name": "passwordValidationRules",
        "type": "Object",
        "description": "An object that contains the password validation rules. The object fields are defined in keys to this object, as defined below."
      },
      {
        "name": "passwordValidationRules.maxLength",
        "type": "Integer",
        "description": "The maximum length of a password."
      },
      {
        "name": "passwordValidationRules.minLength",
        "type": "Integer",
        "description": "The minimum length of a password."
      },
      {
        "name": "passwordValidationRules.rememberPreviousPasswords.count",
        "type": "Integer",
        "description": "The number of previous passwords the user is not allowed to re-use."
      },
      {
        "name": "passwordValidationRules.requireMixedCase",
        "type": "Boolean",
        "description": "Whether or not the user must use upper and lower-cased letter."
      },
      {
        "name": "passwordValidationRules.requireNonAlpha",
        "type": "Boolean",
        "description": "Whether or not the user must use at least one non-alphabetic character in their password."
      },
      {
        "name": "passwordValidationRules.requireNumber",
        "type": "Boolean",
        "description": "Whether or not the user must use at least one numeric character in their password."
      },
      {
        "name": "showCaptcha",
        "type": "Boolean",
        "since": "1.30.0",
        "description": "A boolean that controls whether or not to include captcha scripts and show the captcha challenge (or message for invisible captcha)."
      }
    ]
  },
  {
    "displayName": "OAuth password complete",
    "fieldName": "passwordComplete",
    "description": "This page is used after the user has successfully updated their password, or reset it. This page should instruct the user that their password was updated and that they need to login again.",
    "path": "/password/complete"
  },
  {
    "displayName": "Forgot password",
    "fieldName": "passwordForgot",
    "description": "This page is used when a user starts the forgot password workflow. This page renders the form where the user types in their email address.",
    "path": "/password/forgot",
    "variables": [
      {
        "name": "showCaptcha",
        "type": "Boolean",
        "since": "1.30.0",
        "description": "A boolean that controls whether or not to include captcha scripts and show the captcha challenge (or message for invisible captcha)."
      }
    ]
  },
  {
    "displayName": "Forgot password sent",
    "fieldName": "passwordSent",
    "description": "This page is used when a user has submitted the forgot password form with their email. FusionAuth does not indicate back to the user if their email address was valid in order to prevent malicious activity that could reveal valid email addresses. Therefore, this page should indicate to the user that if their email was valid, they will receive an email shortly with a link to reset their password.",
    "path": "/password/sent",
    "variables": [
      {
        "name": "email",
        "type": "String",
        "description": "The email address that requested to receive a change password request.",
        "since": "1.48.0"
      }
    ]
  },
  {
    "displayName": "Unauthorized",
    "fieldName": "unauthorized",
    "description": "This page is used if the user is not authorized to use the application or page.  If you have advanced threat detection enabled, this page is generally made available to you.",
    "path": "/unauthorized",
    "version": "1.30.0",
    "variables": [
      {
        "name": "cause",
        "type": "String",
        "description": "A string that defines why the user has been redirected to this page."
      },
      {
        "name": "incidentId",
        "type": "String",
        "description": "A string that defines the Id of each security incident generated by the Advanced Threat Detection suite."
      }
    ]
  },
  {
    "displayName": "Verify registration complete",
    "fieldName": "registrationComplete",
    "description": "This page is used after a user has verified their email address for a specific application (i.e. a user registration) by clicking the URL in the email. After FusionAuth has updated their registration object to indicate that their email was verified, the browser is redirected to this page.",
    "path": "/registration/complete"
  },
  {
    "displayName": "Verify registration re-sent",
    "fieldName": "registrationSent",
    "description": "This page is used after a user has asked for the application specific verification email to be resent. This can happen if the URL in the email expired and the user clicked it. In this case, the user can provide their email address again and FusionAuth will resend the email. After the user submits their email and FusionAuth re-sends a verification email to them, the browser is redirected to this page.",
    "path": "/registration/sent",
    "variables": [
      {
        "name": "applicationId",
        "type": "UUID",
        "description": "The Id of the application that the user is verifying their email for and needs the email to be resent."
      },
      {
        "name": "email",
        "type": "String",
        "description": "The email address that requested to receive a new registration verification request."
      }
    ]
  },
  {
    "displayName": "Verify registration required",
    "fieldName": "registrationVerificationRequired",
    "description": "This page is rendered when a user is required to verify their registration prior to being allowed to proceed with the registration flow. This occurs when `Unverified behavior`` is set to `Gated` in registration verification settings on the Application.",
    "path": "/registration/verification-required",
    "version": "1.27.0",
    "variables": [
      {
        "name": "collectVerificationCode",
        "type": "Boolean",
        "description": "When `true`, a form input is displayed to allow a user to enter the verification code. This occurs when `Verification strategy` is set to `FormField` under registration verification settings on the Application."
      },
      {
        "name": "showCaptcha",
        "type": "Boolean",
        "description": "A boolean that controls whether or not to include captcha scripts and show the captcha challenge (or message for invisible captcha).",
        "since": "1.30.0"
      },
      {
        "name": "verificationId",
        "type": "String",
        "description": "The verification Id that was included on as a URL parameter. This is the high entropy value that will be paired with the low entropy one time code to complete email verification."
      }
    ]
  },
  {
    "displayName": "Verify registration",
    "fieldName": "registrationVerify",
    "description": "This page is used when a user clicks the URL from the application specific verification email and the `verificationId` has expired. FusionAuth expires `verificationId` after a period of time (which is configurable). If the user has a URL from the verification email that has expired, this page will be rendered and the error will be displayed to the user.",
    "path": "/registration/verify",
    "variables": [
      {
        "name": "showCaptcha",
        "type": "Boolean",
        "description": "A boolean that controls whether or not to include captcha scripts and show the captcha challenge (or message for invisible captcha).",
        "since": "1.30.0"
      },
      {
        "name": "verificationId",
        "type": "String",
        "description": "The verification id that was included on as a URL parameter but was invalid. This page does a redirect if the verificationId is valid."
      }
    ]
  },
  {
    "displayName": "SAML logout",
    "fieldName": "samlv2Logout",
    "description": "This page is used if the user initiates a SAML logout. This page causes the user to be logged out of all associated applications via a front-channel mechanism before being redirected.",
    "path": "/samlv2/logout",
    "version": "1.25.0",
    "variables": [
      {
        "name": "allLogoutURLs",
        "type": "Set<String>",
        "description": "A set of URLs associated with all of the applications in the tenant to log out the user."
      },
      {
        "name": "registeredLogoutURLs",
        "type": "Set<String>",
        "description": "A set of URLs associated with all of the applications the user is registered for to log out the user."
      }
    ]
  },
  {
    "displayName": "Helpers",
    "fieldName": "helpers",
    "rawDescription": "A https://freemarker.apache.org[FreeMarker] template that contains all of the macros and templates used by the rest of the login Theme FreeMarker templates. This allows you to configure the general layout of your UI configuration and login theme without having to copy and paste HTML into each of the templates.",
    "onlyAPI": true
  }
]
