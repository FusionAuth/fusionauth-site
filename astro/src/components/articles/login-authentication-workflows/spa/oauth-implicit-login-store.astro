<li>The user clicks the login link and the browser navigates away from the single-page application to FusionAuth's OAuth 2 interface. The browser requests the OAuth 2 login page from FusionAuth with a <code>response_type</code> of <code>token</code> indicating that it is using the implicit grant</li>
<li>FusionAuth responds with the HTML, CSS & JavaScript of the login page (including the form)</li>
<li>The user inputs their credentials and clicks the submit button. The browser <code>POST</code>s the form data to FusionAuth</li>
<li>FusionAuth returns a redirect to the application backend's OAuth 2 <code>redirect_uri</code>. This redirect includes the access token (in our case a JWT) from FusionAuth. Also, this response includes a session id for the FusionAuth OAuth 2 interface as an HTTP cookie. This cookie is HttpOnly, which prevents JavaScript from accessing it, making it less vulnerable to theft</li>
<li>The browser requests the application backend's OAuth <code>redirect_uri</code>. This request does not include the JWT because it is after the <code>#</code> in the URL, which means the browser will not send it in the HTTP request to the application backend </li>
<li>The application backend responds with the HTML, CSS & JavaScript of the application. During this step, the browser will initialize the single-page application. As part of the initialization of the application, the JWT  will be pulled from the current URL of the browser </li>