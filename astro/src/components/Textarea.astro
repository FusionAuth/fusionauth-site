---
const { className, id, instructions, label, name, required, value } = Astro.props;
function border(error, borderless, focusWithin, additionalClasses) {
  let borderValue = borderless ? ["border border-transparent ring-1 ring-transparent focus:outline-none"] :
      ["border border-gray-300 ring-1 ring-transparent focus:outline-none"];
  if (error) {
    borderValue.push("border-red-500");

    if (focusWithin) {
      borderValue.push("focus-within:border focus-within:border-red-500 focus-within:ring-red-500");
    } else {
      borderValue.push("focus:border focus:border-red-500 focus:ring-red-500");
    }
  } else {
    if (focusWithin) {
      borderValue.push("focus-within:border focus-within:border-indigo-500 focus-within:ring-indigo-500");
    } else {
      borderValue.push("focus:border focus:border-indigo-500 focus:ring-indigo-500");
    }
  }

  if (additionalClasses) {
    borderValue.push(additionalClasses);
  }

  return borderValue;
}
---
<div>
  <div class:list={border(false, false, true, "bg-white relative rounded shadow-sm w-full")}>
    <label for={id} class="block font-medium leading-none text-xs absolute bg-white left-2 px-1 -top-2 z-20 text-gray-700">
      {label}
      {required && "*"}
    </label>
    <textarea id={id} class="align-top bg-white border-0 rounded text-sm w-full focus:outline-none focus:ring-0" name={name} data-widget="text-editor">{value || ""}</textarea>
  </div>
  {instructions && <sub set:html={instructions}/>}
</div>
