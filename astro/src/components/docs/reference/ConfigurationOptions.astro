---
import Aside from 'src/components/Aside.astro';

import InlineField from 'src/components/InlineField.astro';
import PropertyMemory from 'src/content/docs/reference/_property-memory.mdx';
import ConfigurationLimits from 'src/content/docs/get-started/core-concepts/_configuration-limits.mdx';
import ConfigProps from './_configuration-properties.mdx'
---

<p>
The following table contains all of the configuration options that FusionAuth uses. For your convenience, you may select the type of configuration you plan to use and the names will be updated to correspond to your preference.
</p>

<p>
Display configuration values in format:
</p>

<select id="configuration-type" class="select border-2 border-gray-300 focus-ring-indigo-300 h-10 px-1 dark:text-slate-800" style="width: 100%; margin-bottom: 5px;">
  <option value="config-file">Configuration File Properties</option>
  <option value="environment">Environment Variable</option>
  <option value="java-system-property">Java system property</option>
</select>

<ConfigProps />

<script>
  import { DataElement } from 'src/tools/docs/DataElement';
  import { envCase } from 'src/tools/string/envCase';

  const select = document.getElementById('configuration-type');

  if (select) {
    const redraw = (event) => {
      const selected = event.currentTarget.value;
      const fields = document.querySelectorAll('.api-field-name');
      fields.forEach((field: DataElement) => {
        const val = field.innerText;
        field.data = field.data || {}
        field.data.property = field.data.property || val;
        if (selected === 'config-file') {
          field.innerText = field.data.property;
        } else if (selected === 'environment') {
          field.innerText = envCase(field.data.property);
        } else {
          field.innerText = `-D${field.data.property}`;
        }
      });
    };
    select.addEventListener('change', redraw)
  }
</script>
