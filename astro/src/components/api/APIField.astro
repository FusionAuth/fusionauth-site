---
const { name, description, type, required, optional, since, defaults, deprecated, renderif=true, readonly, noborder } = Astro.props;
---
{/*If you put the API field inside a conditional block it can break the markdown parsing, `renderif` solves that problem  */}
{/* Note: if you use a description parameter instead of a body, you'll get an single-line version */}
{ renderif && <div class={`${noborder ? '' : 'border-b-2 '}mt-2`}>
  <div class="pt-2 flex flex-wrap">
    <span class="font-bold api-field-name truncate">{ name }</span>
    { type && <span class="text-blue-500 px-3">[{type}]</span> }
    { description && <span class="px-3">{description}</span> }
    { required && <span class="px-3 text-orange-500 font-bold capitalize">required</span> }
    { optional && <span class="px-3 text-gray-500 font-bold capitalize">optional</span> }
    { defaults && <span class="px-3 text-gray-500 italic">Defaults to {defaults}</span> }
    { since && <span class="px-3 text-green-500 italic capitalize">available since {since}</span> }
    { deprecated && <span class="px-3 text-red-500 capitalize">DEPRECATED</span> }
    { readonly && <span class="px-3 text-blue-500 font-bold capitalize">READ-ONLY</span> }
  </div>
  <div class="ml-4 mb-2">
    <slot></slot>
  </div>
</div>
}
