---
import Aside from 'src/components/Aside.astro';
import Code from 'astro/components/Code.astro';
import { RemoteValue } from '@fusionauth/astro-components';

export interface Props {
  /**
   * Full URI to extract values from kickstart.json
   * e.g. https://raw.githubusercontent.com/FusionAuth/fusionauth-quickstart-ruby-on-rails-web/main/kickstart/kickstart.json
   */
  kickstartUri: string;

  /**
   * Flag that indicates whether this in API quickstart or not (default)
   */
  api?: boolean;
}

const { kickstartUri, api = false } = Astro.props as Props;
---
<details><summary><b>Launch Locally</b>: best if you have a local postgres database</summary>

<p>You've chosen to install FusionAuth locally on your system.</p>
<p>This is the best option if you have a local database already set up or you want to test FusionAuth with an external database.</p>


<h2>Local Launch Requirements</a>
<p>You need to have either a MySQL or PostgreSQL database installed. You also need a superuser name and password for the database; this user needs to be able to create schemas and databases.</p>

<p>If you do not have a database installed, follow the instructions in our [Database Installation Guide](/docs/get-started/download-and-install/database) to install a database. Below, you see commands to test if the PostgreSQL command line tool, `psql`, is present.</p>

<p><i>Testing the PostgreSQL Installation</i></p>
<pre>
psql --version
</pre>

<p><i>Result of Testing the PostgreSQL Installation</i></p>
<pre>
psql (PostgreSQL) 12.3
</pre>

<hr />

<h2>Install FusionAuth</h2>

<p>Your postgres installation is expected to have a 'fusionauth' user with a password of 'fusionauth'.</p>

<p>If it does not, you will need to change the environment variables DATABASE_ROOT_USERNAME and DATABASE_ROOT_PASSWORD to a root user in the DB.</p>

<p>Set the following environment variables:</p>

<pre>
export DATABASE_URL=jdbc:postgresql://localhost:5432/fusionauth
export DATABASE_ROOT_USERNAME=fusionauth
export DATABASE_ROOT_PASSWORD=fusionauth
export FUSIONAUTH_APP_KICKSTART_FILE=`pwd`/kickstart/kickstart.json
</pre>


<p>Next, run the installation script to install FusionAuth</p>
<pre>
bash install.sh
</pre>

<p>Once the Fast Path installer completes, you will see the below output.</p>

<pre>
Downloading zip packages
######################################################################## 100.0%
######################################################################## 100.0%
Installing packages
Install is complete. Time for tacos.

 1. To start FusionAuth run the following command
    /Users/bpontarelli/dev/example/fusionauth/bin/startup.sh

 2. To begin, access FusionAuth by opening a browser to http://localhost:9011

 3. If you're looking for documentation, open your browser and navigate to https://fusionauth.io/docs

Thank you have a nice day.
</pre>

The next step is to start FusionAuth using the command that the Fast Path installer created. This script is called `startup.sh` or `startup.ps1`. You can execute it from the installation directory.

```shell title="MacOS and Linux Startup Script"
./fusionauth/bin/startup.sh
```

<h2>Start FusionAuth</h2>

<p>The next step is to start FusionAuth using the command that the Fast Path installer created. This script is called `startup.sh` or `startup.ps1`. You can execute it from the installation directory.</p>

<pre>
./fusionauth/bin/startup.sh
</pre>

If you are on Windows, you'll need to use the `startup.ps1`. Prior to version `1.40.0` the file will be named `startup.bat` instead.

<pre>
.\fusionauth\bin\startup.ps1
</pre>

This script will start both the `fusionauth-app` component as well as the `fusionauth-search` component. (Here's [a document on how to choose whether to do so](/docs/get-started/core-concepts/users#user-search).)


</details>

<p>You can log in to the <a href="http://localhost:9011/admin">FusionAuth admin UI</a> and look around if you want to, but with Docker and Kickstart, everything will already be configured correctly.</p>

<Aside type="note">
    <p>If you want to see where the FusionAuth values came from, they can be found in the <a href="http://localhost:9011/admin">FusionAuth app</a>. The tenant Id is found on the Tenants page. To see the Client Id and Client Secret, go to the Applications page and click the <code>View</code> icon under the actions for the ChangeBank application. You'll find the Client Id and Client Secret values in the <code>OAuth configuration</code> section.</p>
</Aside>

<Aside type="caution">
    <p>The <code>.env</code> file contains passwords. In a real application, always add this file to your <code>.gitignore</code> file and never commit secrets to version control.</p>
</Aside>
</details>
