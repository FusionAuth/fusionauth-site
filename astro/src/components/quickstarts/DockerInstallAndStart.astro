
---
import DockerSpinupAccordion from 'src/components/quickstarts/DockerSpinupAccordion.astro';

import Code from 'astro/components/Code.astro';

export interface Props {
  /**
   * Full URI to extract values from kickstart.json
   * e.g. https://raw.githubusercontent.com/FusionAuth/fusionauth-quickstart-ruby-on-rails-web/main/kickstart/kickstart.json
   */
  kickstartUri: string;

  /**
   * Flag that indicates whether this in API quickstart or not (default)
   */
  codeRoot?: boolean;
}
const { kickstartUri, codeRoot } = Astro.props as Props;
---

<dd>
<h2> Install and Start</h2>

<h3> 1. Clone the Code</h3>
<p>First off, grab the code from the repository and change into that directory.</p>

<Code lang="shell" code={`git clone https://github.com/FusionAuth/fusionauth-example-express-start-here/ 
cd fusionauth-example-express-start-here`}/>

<h3> 2. Run FusionAuth via Docker</h3>

<DockerSpinupAccordion kickstartUri={kickstartUri} />

<p>Once the installer completes, you will see something similar to this output on the console:</p>

<pre>
fusionauth-1  | 2022-10-29 01:01:16.527 AM INFO  org.primeframework.mvc.netty.PrimeHTTPServer - Starting FusionAuth HTTP server on port [9011]
fusionauth-1  | 2022-10-29 01:01:16.583 AM INFO  org.primeframework.mvc.netty.PrimeHTTPServer - Starting FusionAuth HTTP loopback server on port [9012]
</pre>


<h2> Summing Up</h2>

<p>To verify that your system is set up, navigate to http://localhost:9011 and be sure you can see the FusionAuth UI.  </p>

<p>You're done with step 1... congratulations!  You've got your own FusionAuth server running on your system.
Your system has been set up using a Kickstart to pre-populate the tutorial environment with an application and some users. 
Feel free to explore what's available before moving on to configuring your application's security using FusionAuth.</p>


</dd>

