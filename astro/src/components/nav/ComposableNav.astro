---
import Icon from '../icon/Icon.astro';
import NavButton from './NavButton.astro';
import MoreMenu from '../MoreMenu.astro';
import Search from "../Search.astro";

interface HeaderItem {
  name: string;
  href: string;
  foldsIntoMenu: boolean;
  hideOnMobile: boolean;
}

const { sectionTitle, sectionTitleHref, headerItems, buttons, mobileAfterBreakItems, colorThemeOverride }
    : { sectionTitle: string, sectionTitleHref: string, headerItems: HeaderItem[], buttons: string[], mobileAfterBreakItems: HeaderItem[], colorThemeOverride: string}
    = Astro.props;

const moreIndex = headerItems.findIndex(headerItem => headerItem.foldsIntoMenu);
const moreMenuItems = headerItems.filter(headerItem => headerItem.foldsIntoMenu);
---
<!-- Header w/ border on bottom, full width and is sticky -->
<nav class="bg-slate-900 block border-slate-700 border-b border-solid h-auto sticky text-left top-0 z-50 xl:shadow-lg">
  <div class="flex justify-between max-w-8xl mx-auto px-4 py-2 lg:container">
    <!-- Logo -->
    <div class="flex place-items-center">
      <a href="/" class="ease-in mr-1 opacity-100 hover:opacity-70 transition-opacity">
        <img src="/img/logo/fa_logo_purple_orange.svg" alt="Logo" class={"h-12 " + (colorThemeOverride === "light" ? "inline" : colorThemeOverride === "dark" ? "hidden": "dark:hidden")}>
        <img src="/img/logo/fa_logo_white_orange.svg" alt="Logo" class={"h-12 " + (colorThemeOverride === "light" ? "hidden" : colorThemeOverride === "dark" ? "inline" : "dark:inline hidden")}>
      </a>
      <span class="font-light text-2xl text-slate-500">/</span>
      <a href={ sectionTitleHref }
         class="ease-in font-bold hover:text-slate-400 ml-2 text-2xl text-white tracking-tight transition-colors">
        <span>{ sectionTitle }</span>
      </a>
    </div>
    <div class="flex items-center lg:hidden">
      <!-- Mobile menu button -->
      <button class="mx-3" data-widget="search-button">
        <span class="sr-only">Open search</span>
        <Icon name="search"/>
      </button>
      <button type="button" id="mobile-menu-btn" data-widget="visibility-button" data-element="mobile-menu-nav"
              class="focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white hover:bg-gray-700 hover:text-white inline-flex items-center justify-center p-2 rounded-md text-gray-400"
              aria-controls="mobile-menu" aria-expanded="false">
        <span class="sr-only">Open main menu</span>
        <Icon name="mobile-menu"/>
      </button>
    </div>
    <!-- Menu -->
    <div
      class="absolute bg-white dark:bg-slate-900 h-screen hidden left-0 lg:bg-transparent lg:dark:bg-transparent lg:flex lg:h-auto lg:items-center lg:ml-auto lg:p-0 lg:static p-6 right-0 top-0">
      <ul class="space-y-6 lg:flex lg:items-center lg:space-y-0">
        { headerItems && headerItems.map((headerItem, idx) =>
          <div>
            {idx == moreIndex && <MoreMenu menuLabel="More" menuItems={moreMenuItems}/>}
            <li class:list={[headerItem.foldsIntoMenu ? 'lg:hidden xl:block' : '', 'ease-in font-bold hover:text-indigo-500 text-base text-white transition-colors lg:mx-3 lg:text-sm']}>
              <a href={ headerItem.href }>{ headerItem.name }</a>
            </li>
          </div>
        )}
      </ul>
      <div class="flex items-center">
        { buttons && buttons.map(button => <NavButton name={button}/> )}
      </div>
    </div>
  </div>
  <div class="block md:shadow-md lg:hidden hidden transition-height duration-700" id="mobile-menu-nav">
    <div class="group-hover:duration-200 pb-3 pt-2 px-2 shadow-2xl space-y-1">
      <!-- Current: "bg-gray-900 text-white", Default: "text-gray-300 hover:bg-gray-700 hover:text-white" -->
      {headerItems && headerItems.filter(headerItem => !headerItem.hideOnMobile).map((headerItem, idx, list) =>
        <a href={ headerItem.href }
           class:list={[idx == list.length -1 ? "pb-4" : "", "block font-semibold hover:ease-linear hover:text-indigo-500 hover:transition-colors px-3 py-2 rounded-md text-base text-white"]}>
          { headerItem.name }
        </a>
      )}
      <hr class="border-slate-700 border-t-2 h-px my-12""/>
      { mobileAfterBreakItems && mobileAfterBreakItems.map(item =>
        <a href={ item.href } class="block font-semibold hover:ease-linear hover:text-indigo-500 hover:transition-colors pb-2 pt-4 px-3 rounded-md text-base text-white">
          { item.name }
        </a>
      )}
    </div>
  </div>
</nav>
<Search/>
<script src="/js/PopoutMenu-0.1.0.js" type="text/javascript"></script>
