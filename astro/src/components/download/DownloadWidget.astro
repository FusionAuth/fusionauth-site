---
import Code from 'src/components/Code.astro';
import Kickstart from 'src/components/download/Kickstart.astro';

var {dockerArgs = " ", includeDocker = true, includeFastPath = true, includeHostedOptions, includeKubernetes, includePackages, includeSandbox, kickstartEnabled, kickstartName} = Astro.props;

var tabs = [];

if (includeDocker) {
  tabs.push(
      {
        "id": "docker",
        "title": "Docker",
        "image": "docker.svg",
        "active": true
      }
  );
}

if (includeFastPath) {
  tabs.push(
      {
        "id": "macos",
        "title": "macOS",
        "image": "macos.svg",
        "active": !includeDocker
      }
  );
  tabs.push(
      {
        "id": "linux",
        "title": "Linux",
        "image": "linux.svg",
        "active": false
      }
  );
  tabs.push(
      {
        "id": "windows",
        "title": "Windows",
        "image": "windows.svg",
        "active": false
      }
  );
}

if (includeHostedOptions) {
  tabs.push(
      {
        "id": "cloud",
        "title": "FusionAuth Cloud",
        "image": "cloud.svg",
        "active": false
      }
  );
  tabs.push(
      {
        "id": "gitpod",
        "title": "Gitpod",
        "image": "gitpod.svg",
        "active": false
      }
  );
  tabs.push(
      {
        "id": "marketplaces",
        "title": "Marketplaces",
        "image": "marketplace.svg",
        "active": false
      }
  );
}

if (includeKubernetes) {
  tabs.push(
      {
        "id": "kubernetes",
          "title": "Kubernetes",
          "image": "kubernetes.svg",
          "active": false
      }
  );
  tabs.push(
      {
        "id": "helm",
          "title": "Helm",
          "image": "helm.png",
          "active": false
      }
  );
}

if (includePackages) {
  tabs.push(
      {
        "id": "debian",
          "title": "Debian",
          "image": "debian.svg",
          "active": false
      }
  );
  tabs.push(
      {
        "id": "redhat",
          "title": "RedHat",
          "image": "redhat.png",
          "active": false
      }
  );
  tabs.push(
      {
        "id": "homebrew",
          "title": "Homebrew",
          "image": "homebrew.svg",
          "active": false
      }
  );
  tabs.push(
      {
        "id": "packages",
        "title": "Packages",
        "image": "package.svg",
        "active": false
      }
  );
}

if (includeSandbox) {
  tabs.push(
      {
        "id": "sandbox",
        "title": "Sandbox",
        "image": "sandbox.svg",
        "active": false
      }
  );
}

const anchorClass = 'border-b border-b-indigo-400 text-indigo-400 hover:text-indigo-400 hover:border-b-2';
const tabClass = "bg-indigo-950 border border-slate-700 flex-1 overflow-hidden rounded-lg text-sm";
const subTabClass = "block border-b-2 border-transparent font-semibold px-7 py-3 text-md text-slate-400 group-[.active]:border-indigo-400 group-[.active]:text-white";
const subSubTabClass = subTabClass.replace("text-md", "text-xs");
var step = 1;

// Add a space so the command prints out nicely
dockerArgs = dockerArgs.trim();
if (dockerArgs !== "" && !dockerArgs.endsWith(" ")) {
  dockerArgs = dockerArgs + " ";
}
---
<div class="bg-indigo-900 flex gap-3 mb-10 not-prose p-3 rounded-2xl text-sm text-white">
  <ul class="bg-indigo-950 border border-slate-700 flex flex-col gap-1 p-2 rounded-lg text-[13px]">
    {tabs.map(tab =>
        <li class:list={["group", tab.active ? "active" : ""]}>
          <a data-tab-button href={"#" + tab.id} class="border border-transparent items-center flex gap-2 rounded-md px-4 py-2 text-slate-400 group-[.active]:border-white hover:bg-slate-800 hover:text-indigo-400">
            <img src={"/img/icons/download/" + tab.image} alt={tab.title} class="m-0 p-0 w-7"/>
            <span class="text-nowrap">{tab.title}</span>
          </a>
        </li>
    )}
  </ul>
  <div data-tab-content id="docker" class:list={[tabClass, includeDocker ? "active" : "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#docker-compose" class={subTabClass}>Docker Compose</a></li>
      <li class="group"><a data-tab-button href="#docker-vanilla" class={subTabClass}>Docker Vanilla</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="docker-compose" class="m-8" data-reset={step = 1}>
      <h2 class="mb-4 text-2xl">Docker Compose</h2>
      <p class="mb-6">
        Use the following Docker Compose commands to get up and running quickly with FusionAuth, PostgreSQL, and Opensearch. You might need to modify it if you are using a different operating system. Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <p class="mb-4">
        <strong>Step { step++ }:</strong> Download the Docker files
      </p>
      <ul class="flex mb-4">
        <li class="group active"><a data-tab-button href="#docker-compose-download-nix" class={subSubTabClass}>Linux/Unix/macOS</a></li>
        <li class="group"><a data-tab-button href="#docker-compose-download-windows" class={subSubTabClass}>Windows</a></li>
      </ul>
      <div data-tab-content id="docker-compose-download-nix">
        <Code>
          curl -fsSL https://raw.githubusercontent.com/FusionAuth/fusionauth-containers/main/docker/fusionauth/docker-compose.yml > docker-compose.yml && \
          curl -fsSL https://raw.githubusercontent.com/FusionAuth/fusionauth-containers/main/docker/fusionauth/.env > .env
        </Code>
      </div>
      <div data-tab-content id="docker-compose-download-windows" class="hidden">
        <Code>
          Invoke-WebRequest -UseBasicParsing https://raw.githubusercontent.com/FusionAuth/fusionauth-containers/main/docker/fusionauth/docker-compose.yml -OutFile docker-compose.yml
          Invoke-WebRequest -UseBasicParsing https://raw.githubusercontent.com/FusionAuth/fusionauth-containers/main/docker/fusionauth/.env -OutFile .env
        </Code>
      </div>
      { kickstartEnabled &&
          <p class="mb-2 mt-12">
            <strong>Step { step++ }:</strong> Download the Kickstart files needed for this project
          </p>
          <p class="mb-4">
            <em class="text-xs">NOTE: The Docker Compose configuration loads these Kickstart files automatically.</em>
          </p>
          <Kickstart env={false} includeNix={true} includeWindows={true} name={kickstartName} section="docker-compose-kickstart"/>
      }
      <p class="mb-6 mt-12">
        <strong>Step { step++ }:</strong> Start the Docker Compose containers
      </p>
      <Code>
        docker compose {dockerArgs}up
      </Code>
      <p class="mb-6">
        Then open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
    <div data-tab-content id="docker-vanilla" class="hidden m-8" data-reset={step = 1}>
      <h2 class="mb-4 text-2xl">Docker Vanilla</h2>
      <p class="mb-6">
        Use the following Docker commands to start just FusionAuth without a database. You'll need to install and configure a database manually. Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <p class="mb-6">
        <strong>Step { step++ }:</strong> Install FusionAuth Docker container
      </p>
      <Code>
        docker pull fusionauth/fusionauth-app
      </Code>
      { kickstartEnabled &&
          <p class="mb-6 mt-12">
            <strong>Step { step++ }:</strong> Download the Kickstart files needed for this project
          </p>
          <Kickstart env={false} includeNix={true} includeWindows={true} name={kickstartName} section="docker-vanilla"/>
      }
      <p class="mb-6 mt-12">
        <strong>Step { step++ }:</strong> Start the Docker container
      </p>
      <Code>
        docker run {dockerArgs}-it -p 9011:9011 --add-host host.docker.internal:host-gateway { kickstartEnabled && "-e FUSIONAUTH_APP_KICKSTART_FILE=\"/usr/local/fusionauth/kickstart/kickstart.json\" --mount type=bind,src=./kickstart,dst=/usr/local/fusionauth/kickstart " }fusionauth/fusionauth-app
      </Code>
      <p class="mb-6">
        <em>NOTE: If you are running the database on the host machine, use the hostname `host.docker.internal` to connect FusionAuth to the database rather than `localhost`.</em>
      </p>
      <p>
        Then open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
  </div>
  <div data-tab-content id="macos" class:list={[tabClass, !includeDocker && includeFastPath ? "active" : "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#macos-fast-path" class={subTabClass}>Fast Path</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="macos-fast-path" class="m-8" data-step={step = 1}>
      <h2 class="mb-4 text-2xl">macOS Fast Path</h2>
      <p class="mb-6">
        Copy and paste the code below into Terminal/iTerm and we'll do the rest (feel free to read the install scripts first).
        This installation method installs the FusionAuth ZIP packages into the current working directory.
        You'll also need to manually install a database for FusionAuth to work.
        You can learn more about our Fast Path installation in our <a href="https://fusionauth.io/docs/get-started/download-and-install/fast-path" class={anchorClass}>Fast Path Installation Guide</a>.
        Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <p class="mb-6">
        <strong>Step { step++ }:</strong> Download and install the ZIP files
      </p>
      <Code>
        curl -fsSL https://raw.githubusercontent.com/FusionAuth/fusionauth-install/master/install.sh | bash -s && \
        cd fusionauth
      </Code>
      { kickstartEnabled &&
          <p class="mb-6 mt-12">
            <strong>Step { step++ }:</strong> Download the Kickstart files needed for this project
          </p>
          <Kickstart env={true} includeNix={true} includeWindows={false} name={kickstartName}/>
      }
      <p class="mb-6 mt-12">
        <strong>Step { step++ }:</strong> Start FusionAuth
      </p>
      <Code>
        bin/startup.sh
      </Code>
      <p>
        Then open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
  </div>
  <div data-tab-content id="linux" class:list={[tabClass, "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#linux-fast-path" class={subTabClass}>Linux Fast Path</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="linux-fast-path" class="m-8" data-step={step = 1}>
      <h2 class="mb-4 text-2xl">Linux Fast Path</h2>
      <p class="mb-6">
        Copy and paste the code below and we'll do the rest (feel free to read the install scripts first). This installation method installs the FusionAuth ZIP packages into the current working directory. You'll also need to manually install a database for FusionAuth to work. You can learn more about our Fast Path installation in our <a href="https://fusionauth.io/docs/get-started/download-and-install/fast-path" class={anchorClass}>Fast Path Installation Guide</a>. Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <p class="mb-6">
        <strong>Step { step++ }:</strong> Download and install the ZIP files
      </p>
      <Code>
        curl -fsSL https://raw.githubusercontent.com/FusionAuth/fusionauth-install/master/install.sh | bash -s && \
        cd fusionauth
      </Code>
      { kickstartEnabled &&
          <p class="mb-6 mt-12">
            <strong>Step { step++ }:</strong> Download the Kickstart files needed for this project
          </p>
          <Kickstart env={true} includeNix={true} includeWindows={false} name={kickstartName}/>
      }
      <p class="mb-6 mt-12">
        <strong>Step { step++ }:</strong> Start FusionAuth
      </p>
      <Code>
        bin/startup.sh
      </Code>
      <p>
        Then open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
  </div>
  <div data-tab-content id="windows" class:list={[tabClass, "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#windows-fast-path" class={subTabClass}>Fast Path</a></li>
      <li class="group"><a data-tab-button href="#windows-wsl2" class={subTabClass}>WSL v2</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="windows-fast-path" class="m-8" data-step={step = 1}>
      <h2 class="mb-4 text-2xl">Windows Fast Path</h2>
      <p class="mb-6">
        Copy and paste the code below into PowerShell and we'll do the rest (feel free to read the install scripts first).
        This installation method installs the FusionAuth ZIP packages into the current working directory.
        You'll also need to manually install a database for FusionAuth to work.
        You can learn more about our Fast Path installation in our <a href="https://fusionauth.io/docs/get-started/download-and-install/fast-path" class={anchorClass}>Fast Path Installation Guide</a>.
        Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <p class="mb-6">
        <strong>Step { step++ }:</strong> Download and install the ZIP files
      </p>
      <Code>
        Invoke-WebRequest -UseBasicParsing -Uri https://raw.githubusercontent.com/FusionAuth/fusionauth-install/main/install.ps1 | iex
        cd fusionauth
      </Code>
      { kickstartEnabled &&
          <p class="mb-6 mt-12">
            <strong>Step { step++ }:</strong> Download the Kickstart files needed for this project
          </p>
          <Kickstart env={true} includeNix={false} includeWindows={true} name={kickstartName}/>
      }
      <p class="mb-6 mt-12">
        <strong>Step { step++ }:</strong> Start FusionAuth
      </p>
      <Code>
        bin\startup.ps1
      </Code>
      <p>
        Then open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
    <div data-tab-content id="windows-wsl2" class="hidden m-8">
      <h2 class="mb-4 text-2xl">Windows Subsystem for Linux 2</h2>
      <p class="mb-6">
        Follow the <a href="https://docs.microsoft.com/en-us/windows/wsl/about" class={anchorClass}>Microsoft documentation to install Debian/Ubuntu using WSL 2</a> and then follow the Linux install directions by clicking the Linux tab above.
      </p>
    </div>
  </div>
  <div data-tab-content id="debian" class:list={[tabClass, !includeDocker && !includeFastPath && includePackages ? "active" : "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#debian-package" class={subTabClass}>Debian Package</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="debian-package" class="m-8">
      <h2 class="mb-4 text-2xl">Debian Package</h2>
      <p class="mb-6">
        Follow the steps below to install FusionAuth on a Debian/Ubuntu style Linux. This installation method installs the FusionAuth platform packages (DEBs) and will require sudo or root access. This command assumes you are using Bash. You might need to modify it if you are using a different shell. You'll also need to manually install a database for FusionAuth to work. Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <pre class="astro-code bg-slate-950 mb-8 overflow-x-scroll pt-4 px-4 [&::-webkit-scrollbar-thumb]:bg-indigo-400 [&::-webkit-scrollbar-track]:bg-slate-950 [&::-webkit-scrollbar]:h-1">
<code class="block whitespace-pre">VERSION=$(curl -fsSL https://license.fusionauth.io/api/latest-version) && \
curl -fsSL https://files.fusionauth.io/products/fusionauth/$&lbrace;VERSION}/fusionauth-app_\$&lbrace;VERSION}-1_all.deb > fusionauth-app_\$&lbrace;VERSION}-1_all.deb && \
sudo dpkg -i fusionauth-app_\$&lbrace;VERSION}-1_all.deb && \
sudo systemctl start fusionauth-app</code>
      </pre>
      <p>
        Then open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
  </div>
  <div data-tab-content id="redhat" class:list={[tabClass, "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#redhat-package" class={subTabClass}>Red Hat Package</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="redhat-package" class="m-8">
      <h2 class="mb-4 text-2xl">Red Hat Package</h2>
      <p class="mb-6">
        Follow the steps below to install FusionAuth on Red Hat or other RPM-based distribution. This installation method installs the FusionAuth platform packages (RPMs) and will require sudo or root access. This command assume s you are using Bash. You might need to modify it if you are using a different shell. You'll also need to manually install a database for FusionAuth to work. Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <pre class="astro-code bg-slate-950 mb-8 overflow-x-scroll pt-4 px-4 [&::-webkit-scrollbar-thumb]:bg-indigo-400 [&::-webkit-scrollbar-track]:bg-slate-950 [&::-webkit-scrollbar]:h-1">
<code class="block whitespace-pre">VERSION=$(curl -fsSL https://license.fusionauth.io/api/latest-version) && \
curl -fsSL https://files.fusionauth.io/products/fusionauth/$&lbrace;VERSION}/fusionauth-app-$&lbrace;VERSION}-1.noarch.rpm > fusionauth-app-$&lbrace;VERSION}-1.noarch.rpm && \
sudo rpm -i fusionauth-app-$&lbrace;VERSION}-1.noarch.rpm && \
sudo systemctl start fusionauth-app</code>
      </pre>
      <p>
        Then open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
  </div>
  <div data-tab-content id="homebrew" class:list={[tabClass, "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#homebrew-cli" class={subTabClass}>Homebrew</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="homebrew-cli" class="m-8">
      <h2 class="mb-4 text-2xl">Homebrew Installation</h2>
      <p class="mb-6">
        Copy and paste each command below into Terminal to install using <a href="https://brew.sh/" class={anchorClass}>Homebrew</a>.
        You'll also need to manually install a database for FusionAuth to work.
        You can also review our <a href="https://fusionauth.io/docs/get-started/download-and-install/homebrew" class={anchorClass}>Homebrew Installation Guide</a> for more information.
        Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <p class="mb-6">
        <strong>Step 1:</strong> Tap the FusionAuth package, this will only need to be performed once
      </p>
      <pre class="astro-code bg-slate-950 mb-8 overflow-x-scroll pt-4 px-4 [&::-webkit-scrollbar-thumb]:bg-indigo-400 [&::-webkit-scrollbar-track]:bg-slate-950 [&::-webkit-scrollbar]:h-1">
        <code class="block whitespace-pre">brew tap fusionauth/homebrew-fusionauth</code>
      </pre>
      <p class="mb-6">
        <strong>Step 2:</strong> Install the FusionAuth tap, this will only need to be performed once
      </p>
      <pre class="astro-code bg-slate-950 mb-8 overflow-x-scroll pt-4 px-4 [&::-webkit-scrollbar-thumb]:bg-indigo-400 [&::-webkit-scrollbar-track]:bg-slate-950 [&::-webkit-scrollbar]:h-1">
        <code class="block whitespace-pre">brew install fusionauth-app</code>
      </pre>
      <p class="mb-6">
        <strong>Step 3:</strong> Start the FusionAuth service
      </p>
      <pre class="astro-code bg-slate-950 mb-8 overflow-x-scroll pt-4 px-4 [&::-webkit-scrollbar-thumb]:bg-indigo-400 [&::-webkit-scrollbar-track]:bg-slate-950 [&::-webkit-scrollbar]:h-1">
        <code class="block whitespace-pre">brew services start fusionauth-app</code>
      </pre>
      <p>
        Than open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
  </div>
  <div data-tab-content id="kubernetes" class:list={[tabClass, !includeDocker && !includeFastPath && !includePackages && includeKubernetes ? "active" : "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#kubernetes-google" class={subTabClass}>Google KE</a></li>
      <li class="group"><a data-tab-button href="#kubernetes-microsoft" class={subTabClass}>Microsoft AKS</a></li>
      <li class="group"><a data-tab-button href="#kubernetes-amazon" class={subTabClass}>Amazon EKS</a></li>
      <li class="group"><a data-tab-button href="#kubernetes-minikube" class={subTabClass}>Minikube</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="kubernetes-google" class="m-8">
      <h2 class="mb-4 text-2xl">Google Kubernetes Engine</h2>
      <p class="mb-6">
        Follow the steps below to install FusionAuth on Kubernetes using Helm. You’ll need to have a running kubernetes cluster, please visit our <a href="https://fusionauth.io/docs/get-started/download-and-install/kubernetes/gke" class={anchorClass}>documentation</a> for specific steps for cluster setup instructions.
        You'll need to update values.yml with database and Elasticsearch configuration information. Please review the <a href="https://fusionauth.io/docs/get-started/download-and-install/kubernetes/fusionauth-deployment" class={anchorClass}>Kubernetes Installation Guide</a> for more details.
        Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <pre class="astro-code bg-slate-950 mb-8 overflow-x-scroll pt-4 px-4 [&::-webkit-scrollbar-thumb]:bg-indigo-400 [&::-webkit-scrollbar-track]:bg-slate-950 [&::-webkit-scrollbar]:h-1">
<code class="block whitespace-pre">helm repo add fusionauth https://fusionauth.github.io/charts && \
curl -o values.yaml https://raw.githubusercontent.com/FusionAuth/charts/master/chart/values.yaml && \
helm install my-release fusionauth/fusionauth -f values.yaml && \
export SVC_NAME=$(kubectl get svc --namespace default -l "app.kubernetes.io/name=fusionauth,app.kubernetes.io/instance=my-release" -o jsonpath="&lbrace;.items[0].metadata.name}") && \
kubectl port-forward svc/$SVC_NAME 9011:9011</code>
      </pre>
      <p>
        Then open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
    <div data-tab-content id="kubernetes-microsoft" class="hidden m-8">
      <h2 class="mb-4 text-2xl">Microsoft Azure Kubernetes Service</h2>
      <p class="mb-6">
        Follow the steps below to install FusionAuth on Kubernetes using Helm. You’ll need to have a running kubernetes cluster, please visit our <a href="https://fusionauth.io/docs/v1/tech/installation-guide/kubernetes/setup/aks" class={anchorClass}>documentation</a> for specific steps for cluster setup instructions.
        You'll need to update values.yml with database and Elasticsearch configuration information. Please review the <a href="https://fusionauth.io/docs/v1/tech/installation-guide/kubernetes/fusionauth-deployment" class={anchorClass}>Kubernetes Installation Guide</a> for more details.
        Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <pre class="astro-code bg-slate-950 mb-8 overflow-x-scroll pt-4 px-4 [&::-webkit-scrollbar-thumb]:bg-indigo-400 [&::-webkit-scrollbar-track]:bg-slate-950 [&::-webkit-scrollbar]:h-1">
<code class="block whitespace-pre">helm repo add fusionauth https://fusionauth.github.io/charts && \
curl -o values.yaml https://raw.githubusercontent.com/FusionAuth/charts/master/chart/values.yaml && \
helm install my-release fusionauth/fusionauth -f values.yaml && \
export SVC_NAME=$(kubectl get svc --namespace default -l "app.kubernetes.io/name=fusionauth,app.kubernetes.io/instance=my-release" -o jsonpath="&lbrace;.items[0].metadata.name}") && \
kubectl port-forward svc/$SVC_NAME 9011:9011</code>
      </pre>
      <p>
        Then open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
    <div data-tab-content id="kubernetes-amazon" class="hidden m-8">
      <h2 class="mb-4 text-2xl">Amazon Elastic Kubernetes Service</h2>
      <p class="mb-6">
        Follow the steps below to install FusionAuth on Kubernetes using Helm. You’ll need to have a running kubernetes cluster, please visit our <a href="https://fusionauth.io/docs/v1/tech/installation-guide/kubernetes/setup/eks" class={anchorClass}>documentation</a> for specific steps for cluster setup instructions.
        You'll need to update values.yml with database and Elasticsearch configuration information. Please review the <a href="https://fusionauth.io/docs/v1/tech/installation-guide/kubernetes/fusionauth-deployment" class={anchorClass}>Kubernetes Installation Guide</a> for more details.
        Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <pre class="astro-code bg-slate-950 mb-8 overflow-x-scroll pt-4 px-4 [&::-webkit-scrollbar-thumb]:bg-indigo-400 [&::-webkit-scrollbar-track]:bg-slate-950 [&::-webkit-scrollbar]:h-1">
<code class="block whitespace-pre">helm repo add fusionauth https://fusionauth.github.io/charts && \
curl -o values.yaml https://raw.githubusercontent.com/FusionAuth/charts/master/chart/values.yaml && \
helm install my-release fusionauth/fusionauth -f values.yaml && \
export SVC_NAME=$(kubectl get svc --namespace default -l "app.kubernetes.io/name=fusionauth,app.kubernetes.io/instance=my-release" -o jsonpath="&lbrace;.items[0].metadata.name}") && \
kubectl port-forward svc/$SVC_NAME 9011:9011</code>
      </pre>
      <p>
        Then open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
    <div data-tab-content id="kubernetes-minikube" class="hidden m-8">
      <h2 class="mb-4 text-2xl">Minikube</h2>
      <p class="mb-6">
        Follow the steps below to install FusionAuth on Kubernetes using Helm. You’ll need to have a running kubernetes cluster, please visit our <a href="https://fusionauth.io/docs/v1/tech/installation-guide/kubernetes/setup/minikube" class={anchorClass}>documentation</a> for specific steps for cluster setup instructions.
        You'll need to update values.yml with database and Elasticsearch configuration information. Please review the <a href="https://fusionauth.io/docs/v1/tech/installation-guide/kubernetes/fusionauth-deployment" class={anchorClass}>Kubernetes Installation Guide</a> for more details.
        Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <pre class="astro-code bg-slate-950 mb-8 overflow-x-scroll pt-4 px-4 [&::-webkit-scrollbar-thumb]:bg-indigo-400 [&::-webkit-scrollbar-track]:bg-slate-950 [&::-webkit-scrollbar]:h-1">
<code class="block whitespace-pre">helm repo add fusionauth https://fusionauth.github.io/charts && \
curl -o values.yaml https://raw.githubusercontent.com/FusionAuth/charts/master/chart/values.yaml && \
helm install my-release fusionauth/fusionauth -f values.yaml && \
export SVC_NAME=$(kubectl get svc --namespace default -l "app.kubernetes.io/name=fusionauth,app.kubernetes.io/instance=my-release" -o jsonpath="&lbrace;.items[0].metadata.name}") && \
kubectl port-forward svc/$SVC_NAME 9011:9011</code>
      </pre>
      <p>
        Then open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
  </div>
  <div data-tab-content id="helm" class:list={[tabClass, "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#helm-package" class={subTabClass}>Helm</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="helm-package" class="m-8">
      <h2 class="mb-4 text-2xl">Helm Package Manager</h2>
      <p class="mb-6">
        Follow the steps below to install FusionAuth on Kubernetes using Helm. You'll need to update values.yml with database and Elasticsearch configuration information.
        Please review the <a href="https://fusionauth.io/docs/get-started/download-and-install/kubernetes/fusionauth-deployment" class={anchorClass}>Kubernetes Installation Guide</a> for more details.
        Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <pre class="astro-code bg-slate-950 mb-8 overflow-x-scroll pt-4 px-4 [&::-webkit-scrollbar-thumb]:bg-indigo-400 [&::-webkit-scrollbar-track]:bg-slate-950 [&::-webkit-scrollbar]:h-1">
<code class="block whitespace-pre">helm repo add fusionauth https://fusionauth.github.io/charts && \
curl -o values.yaml https://raw.githubusercontent.com/FusionAuth/charts/master/chart/values.yaml && \
helm install my-release fusionauth/fusionauth -f values.yaml && \
export SVC_NAME=$(kubectl get svc --namespace default -l "app.kubernetes.io/name=fusionauth,app.kubernetes.io/instance=my-release" -o jsonpath="&lbrace;.items[0].metadata.name}") && \
kubectl port-forward svc/$SVC_NAME 9011:9011</code>
      </pre>
      <p>
        Then open <a href="http://localhost:9011" class={anchorClass}>http://localhost:9011</a> in your browser.
      </p>
    </div>
  </div>
  <div data-tab-content id="packages" class:list={[tabClass, "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#packages-link" class={subTabClass}>Packages</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="packages-link" class="m-8">
      <h2 class="mb-4 text-2xl">Package Downloads</h2>
      <p class="mb-6">
        Looking for our standard packages (DEB, RPM and ZIPs)? They are stored in our <a href="https://fusionauth.io/direct-download" class={anchorClass}>direct downloads</a>.
      </p>
    </div>
  </div>
  <div data-tab-content id="cloud" class:list={[tabClass, !includeDocker && !includeFastPath && !includePackages && !includeKubernetes && includeHostedOptions ? "active" : "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#fusionauth-cloud" class={subTabClass}>FusionAuth Cloud</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="fusionauth-cloud" class="m-8">
      <h2 class="mb-4 text-2xl">FusionAuth Cloud</h2>
      <p class="mb-6">
        You can sign up for a free trial of FusionAuth running in our fully managed Cloud. Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <a href="https://account.fusionauth.io/account/free-trial/start?source=site" class="bg-orange-400 font-bold inline-block px-6 py-3 rounded-md uppercase">start free trial</a>
    </div>
  </div>
  <div data-tab-content id="gitpod" class:list={[tabClass, "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#gitpod-classic" class={subTabClass}>Gitpod Classic</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="gitpod-classic" class="m-8">
      <h2 class="mb-4 text-2xl">Gitpod Classic</h2>
      <p class="mb-6">
        Launch FusionAuth in a Gitpod Classic environment. If you have a Gitpod Enterprise account, you can also launch FusionAuth. Feel free to open an issue in <a href="https://github.com/FusionAuth/fusionauth-issues" class={anchorClass}>GitHub</a> if you find any issues.
      </p>
      <a href="https://gitpod.io/#https://github.com/fusionauth/fusionauth-example-express-start-here" class="inline-block" target="_blank">
        <img src="https://gitpod.io/button/open-in-gitpod.svg" alt="Open in GitPod"/>
      </a>
    </div>
  </div>
  <div data-tab-content id="sandbox" class:list={[tabClass, !includeDocker && !includeFastPath && !includePackages && !includeKubernetes && !includeHostedOptions && includeSandbox ? "active" : "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#sandbox-link" class={subTabClass}>Sandbox</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="sandbox-link" class="m-8">
      <h2 class="mb-4 text-2xl">Sandbox (running in FusionAuth Cloud)</h2>
      <p class="mb-6">
        Want to check out FusionAuth before installing? Check out our <a href="https://sandbox.fusionauth.io/" class={anchorClass}>sandbox environment</a>.
      </p>
      <p class="italic mb-6 text-xs">
        P.S. our sandbox environment is running on <a href="https://fusionauth.io/platform/fusionauth-cloud" class={anchorClass} target="_blank">FusionAuth Cloud</a>.
      </p>
    </div>
  </div>
  <div data-tab-content id="marketplaces" class:list={[tabClass, "hidden"]}>
    <ul class="flex mt-3 mx-4">
      <li class="group active"><a data-tab-button href="#marketplaces-links" class={subTabClass}>Marketplaces</a></li>
    </ul>
    <hr class="border-slate-700"/>
    <div data-tab-content id="marketplaces-links" class="m-8">
      <h2 class="mb-4 text-2xl">Marketplaces</h2>
      <p class="mb-6">
        FusionAuth can run on any server, anywhere, but is also available on public cloud provider’s marketplaces.
      </p>
      <p class="mb-6">
        Choose a public cloud below for instructions on how to install using their marketplace.
      </p>
      <div class="flex justify-around">
        <div class="text-center">
          <a href="https://marketplace.digitalocean.com/apps/fusionauth" class="bg-white block border-2 border-transparent mb-4 p-4 rounded-lg w-36 hover:border-indigo-400">
            <img src="/img/icons/download/digital-ocean-vertical.svg" alt="Digital Ocean"/>
          </a>
          <p>Digital Ocean</p>
        </div>
        <div class="text-center">
          <a href="https://aws.amazon.com/marketplace/seller-profile?id=30ecc80d-f96e-4259-ae1c-fc3b994f90ea" class="bg-white block border-2 border-transparent mb-4 p-4 rounded-lg w-36 hover:border-indigo-400">
            <img src="/img/icons/download/amazon-web-services.svg" alt="Amazon Web Services"/>
          </a>
          <p>Amazon Web Services</p>
        </div>
        <div class="text-center">
          <a href="https://console.cloud.google.com/marketplace/product/fusionauth-public/fusionauth-enterprise" class="bg-white block border-2 border-transparent mb-4 p-4 rounded-lg w-36 hover:border-indigo-400">
            <img src="/img/icons/download/google-cloud-platform.svg" alt="Google Cloud"/>
          </a>
          <p>Google Cloud</p>
        </div>
      </div>
    </div>
  </div>
</div>