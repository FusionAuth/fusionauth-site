---
/**
 * A summary and details component
 *
 * @example
 * <Accordion open={true}>
 *   <p slot="title">Title</p>
 *   <p>Content</p>
 * </Accordion>
 *
 * @example
 *  <Accordion open={true} title="Title">
 *    <p>Content</p>
 *  </Accordion>
 */
import Icon from './icon/Icon.astro';

interface Props {
  open?: boolean;
}

const { open = false, title }: Props = Astro.props;
---
<details {open}>
  <summary class="list-none my-1 cursor-pointer max-w-md">
    <div class="flex flex-row justify-between w-full pb-1">
      {title ? <span>{title}</span> : <slot name="title" /> }
      <span class:list={["open-icon", !open ? "" : "hidden"]}>
        <Icon name="chevron-right" size={"text-sm"}/>
      </span>
      <span class:list={["close-icon", open ? "" : "hidden"]}>
        <Icon name="chevron-down" size={"text-sm"}/>
      </span>
    </div>
  </summary>
  <slot></slot>
</details>
<style>
  summary::-webkit-details-marker {
    display: none;
  }
</style>
<script>
  const summaries = document.querySelectorAll('summary');
  summaries.forEach(summary => summary.addEventListener('click', event => {
    const details= summary.parentElement as HTMLDetailsElement;
    const close = summary.querySelector('.close-icon');
    const open = summary.querySelector('.open-icon');
    if (!details.open) {
      open.classList.add('hidden');
      close.classList.remove('hidden');
    } else {
      close.classList.add('hidden');
      open.classList.remove('hidden');
    }
  }));
</script>