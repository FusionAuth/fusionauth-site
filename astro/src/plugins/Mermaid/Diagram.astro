---
import renderDiagram from './render-diagram';
import cache, { generateHash } from './cache';

const props = { ...Astro.props };
props.code = props.code || '';
props.id = props.id || 'fusionauth-diagram';
props.errorBoxes = props.errorBoxes || [];

const uniqueKey = generateHash([props.code, props.id]);

if (cache[uniqueKey] === undefined) {
  /* Render the mermaid diagram */
  const result: string | false = await renderDiagram({
    code: props.code,
    id: props.id
  });
  if (result) {
    /* Store diagram data to cache */
    cache[uniqueKey] = result;
  }
}

let css = '';
props.errorBoxes.forEach(i => {
  css += `
.mermaid-diagram g:nth-child(${i}) .note { fill: #fecaca !important; stroke: #f87171 !important; }
.dark .mermaid-diagram g:nth-child(${i}) .note { fill: #f87171 !important; stroke: #fecaca !important; }
`;
});
---

{
  cache[uniqueKey] && (
    <div class="mermaid-diagram">
      <Fragment set:html={cache[uniqueKey]} data-test="mermaid" />
    </div>
  )
}

<style is:global set:html={css}/>