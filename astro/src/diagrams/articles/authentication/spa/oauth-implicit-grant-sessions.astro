---
import { Diagram, type Config } from "astro-diagram";
import * as include from "./_includes.js";

const config = {
  boxMargin: 30,
  messageMargin: 5000,
  mirrorActors: true,
  noteMargin: 5,
  wrap: true
} as Config;

const diagram = `
sequenceDiagram
  autonumber
  ${include.participants}
  ${include.initialize}

  Note over Browser,Hacker: Login (browser navigates away from SPA)
  Browser->>FusionAuth: GET /oauth2/authorize {response_type=token}
  FusionAuth->>Browser: (Login form HTML)
  Browser->>FusionAuth: POST /oauth2/authorize (response_type=token)
  FusionAuth->>Browser: 302 Location: {redirect_uri w/ JWT in redirect URI and no refresh token}<br/>[SessionId HttpOnly w/ domain: login.fusionauth.io]
  Browser->>Store: GET {redirect_uri w/o JWT in URI}
  Store->>Browser: (SPA HTML, CSS & JavaScript)

  Note over Browser,Hacker: Start session
  Browser->>Store: AJAX POST /api/start-session<br/>(JWT from redirect_uri)
  Store->>Store: Optionally store JWT in session
  Store->>Browser: [SessionId HttpOnly w/ domain: Store.Example.com]

  ${include.shoppingCartSessionLoad}

  ${include.sessionExpires}

  Note over Browser,Hacker: Shopping cart load
  Browser->>Store: AJAX GET /api/load-shopping-cart<br/>[SessionId HttpOnly w/ domain: Store.Example.com]
  Store->>Browser: 401 Not Authorized

  Note over Browser,Hacker: Automatic re-login (since session exists)
  Browser->>FusionAuth: GET /oauth2/authorize {response_type=token}<br/>[SessionId HttpOnly w/ domain: login.fusionauth.io]
  FusionAuth->>Browser: 302 Location: {redirect_uri w/ JWT in redirect URI and no refresh token}<br/>[SessionId HttpOnly w/ domain: login.fusionauth.io]
  Browser->>Store: GET {redirect_uri w/o JWT in URI}
  Store->>Browser: (SPA HTML, CSS & JavaScript)

  Note over Browser,Hacker: Start session
  Browser->>Store: AJAX POST /api/start-session<br/>(JWT from redirect_uri)
  Store->>Store: Optionally store JWT in session
  Store->>Browser: [SessionId HttpOnly w/ domain: Store.Example.com]

  ${include.shoppingCartSessionLoad}

  ${include.sso}

  ${include.forumsInitialize}
  
  Note over Browser,Hacker: Login (browser navigates away from SPA but auto-logs-in since the session exists)
  Browser->>FusionAuth: GET /oauth2/authorize {response_type=token}<br/>[SessionId HttpOnly w/ domain: login.fusionauth.io]
  FusionAuth->>Browser: 302 Location: {redirect_uri w/ JWT in redirect URI and no refresh token}<br/>[SessionId HttpOnly w/ domain: login.fusionauth.io]
  Browser->>Forums: GET {redirect_uri w/o JWT in URI}
  Forums->>Browser: (SPA HTML, CSS & JavaScript)

  Note over Browser,Hacker: Start session
  Browser->>Forums: AJAX POST /api/start-session<br/>(JWT from redirect_uri)
  Forums->>Forums: Optionally store JWT in session
  Forums->>Browser: [SessionId HttpOnly w/ domain: Forums.Example.com]

  ${include.forumsSessionLoad}

  ${include.attackVectors}

  ${include.stolenSessionId}
`;
---

<style is:global>
    #diagram g:nth-child(18) .note, #diagram g:nth-child(20) .note {
        fill: #fecaca !important;
        stroke: #f87171 !important;
    }
    .dark #diagram g:nth-child(18) .note, .dark #diagram g:nth-child(20) .note {
        fill: #f87171 !important;
        stroke: #fecaca !important;
    }
</style>

<Diagram code={diagram} config={config}/>
