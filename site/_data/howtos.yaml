# this is the technology index page definitions
technology_index_pages:
    - indexname: java-spring
      icon_name: java-spring.png
      technology: Java Spring
      more_text: Java Spring lets you build applications quickly by leveraging the wide set of libraries Java programmers have built over the years. With dependency injection, built-in testing, and great documentation, Java Spring is a great foundation for any application. You also benefit from the stable and performant Java runtime.
    - indexname: python-django
      icon_name: python-django.png
      technology: Python Django
      more_text: Python Django helps you create web applications. With a 'batteries included' approach, Python Django ships with admin utilities and tons of other functionality. It's easy to integrate with other Python libraries from that vast ecosystem as well.

# this is the feature index page definitions
feature_index_pages:
    - indexname: magic-links
      icon_name: magic-links.png
      feature: Magic Links
      more_text: Magic links are a great way to make it easier for your users to log in to your application without a password. They work by sending the user a one time code in a link, typically as an email or SMS message. When the user clicks on the link, they are then logged in to the application.
    - indexname: twitter-login
      icon_name: twitter-login.png
      feature: Twitter Login
      more_text: "Configuring Twitter login makes it easy for your users to log in using a Twitter account they already have. Instead of creating an account on your application, users click on a ‘Login with Twitter’ button and log in with their credentials on Twitter. After successfully doing so, they’ll arrive back at your site."


# complex text that is often reused across feature pages
# we use aliases to keep it in sync: https://blog.jasonhee.com/how-to-use-yaml-aliases
common_fields:
  magic_links:
    feature_intro: &magic_links_feature_intro "Magic links are a passwordless method of authentication and make it easier for your users to log in. They work by sending the user a one time code in a link, typically as an email or SMS message. When the user clicks on the link, they are then logged in to the application."
    next_steps_text: &magic_links_next_steps_text "If you want to actually get an email and have log in, make sure you [set up your FusionAuth email configuration](/docs/v1/tech/email-templates/configure-email) using a service like Sendgrid or Mailgun."
    feature_manual_navigation: &magic_links_feature_manual_navigation navigating to applications, then the application configuration, then the security tab, then the passwordless login section
  twitter_login:
    feature_intro: &twitter_login_feature_intro Configuring Twitter login makes it easy for your users to log in using a Twitter account they already have. Instead of creating an account on your application, users click on a 'Login with Twitter' button and log in with their credentials on Twitter. After successfully doing so, they'll arrive back at your site.
    next_steps_text: &twitter_login_next_steps_text "If you want to let your users truly login with Twitter, make sure you set up your Twitter Identity Provider with real client id and client secret values provided by Twitter. [Read more in these instructions](/docs/v1/tech/identity-providers/twitter)."
    feature_manual_navigation: &twitter_login_feature_manual_navigation navigating to settings, then identity providers, then add a new Twitter identity provider. Configure it, and make sure you enable it for your application

# this is the list of individual feature pages

list:
    - howtoname: "magic-links"
      title: How to add magic links to a Java Spring application
      description: It is easy to add magic links to your Java Spring application to enable passwordless authentication. With magic links, users don't have to remember a password. You'll integrate FusionAuth and then configure magic links.
      feature: magic links
      feature_title: Magic Links
      feature_singular: magic link
      feature_icon_name: magic-links.png
      technology_icon_name: java-spring.png
      technology: Java Spring
      technology_slug: java-spring
      code_language: java
      feature_config_script_location: src/main/java/io/fusionauth/example/AddMagicLink.java
      feature_config_script_content_location: https://raw.githubusercontent.com/FusionAuth/fusionauth-example-client-libraries/main/java/src/main/java/io/fusionauth/example/AddMagicLink.java
      feature_config_command: 'mvn compile && mvn exec:java -Dexec.mainClass="io.fusionauth.example.AddMagicLinks" 
\

-Dfusionauth.api.key=<your API key>'
      sample_app_url: http://localhost:8080
      admin_feature_image_file: /assets/img/howto/screenshots/adminui/magic-link.png
      user_feature_image_file: /assets/img/howto/screenshots/userui/magic-link.png
      feature_intro: *magic_links_feature_intro
      next_steps_text: *magic_links_next_steps_text
      feature_manual_navigation: *magic_links_feature_manual_navigation
     
    - howtoname: "twitter-login"
      title: How to add Twitter login to a Java Spring application
      description: It is easy to add login with Twitter to your Java Spring application. You'll integrate FusionAuth and then configure a Twitter Identity Provider.
      feature: Twitter login
      feature_singular: Twitter login
      feature_title: Twitter Login
      feature_icon_name: twitter-login.png
      technology_icon_name: java-spring.png
      technology: Java Spring
      technology_slug: java-spring
      code_language: java
      feature_config_script_location: src/main/java/io/fusionauth/example/AddTwitterOAuth.java
      feature_config_script_content_location: https://raw.githubusercontent.com/FusionAuth/fusionauth-example-client-libraries/main/java/src/main/java/io/fusionauth/example/AddTwitterOAuth.java
      feature_config_command: 'mvn compile && mvn exec:java -Dexec.mainClass="io.fusionauth.example.AddTwitterOAuth" -Dfusionauth.api.key=<your API key>'
      sample_app_url: http://localhost:8080
      admin_feature_image_file: /assets/img/howto/screenshots/adminui/twitter-login.png
      user_feature_image_file: /assets/img/howto/screenshots/userui/twitter-login.png
      feature_intro: *twitter_login_feature_intro
      next_steps_text: *twitter_login_next_steps_text
      feature_manual_navigation: *twitter_login_feature_manual_navigation

    - howtoname: "magic-links"
      title: How to add magic links to a Python Django application
      description: It is easy to add magic links to your Python Django application to enable passwordless authentication. With magic links, users don't have to remember a password. You'll integrate FusionAuth and then configure magic links.
      feature: magic links
      feature_title: Magic Links
      feature_singular: magic link
      feature_icon_name: magic-links.png
      technology_icon_name: python-django.png
      technology: Python Django
      technology_slug: python-django
      code_language: python
      feature_config_script_location: add-magic-link.py
      feature_config_script_content_location: https://raw.githubusercontent.com/FusionAuth/fusionauth-example-client-libraries/main/python/add-magic-link.py
      feature_config_command: 'fusionauth_api_key=<your API key> python add-magic-link.py'
      sample_app_url: http://localhost:8000
      admin_feature_image_file: /assets/img/howto/screenshots/adminui/magic-link.png
      user_feature_image_file: /assets/img/howto/screenshots/userui/magic-link.png
      feature_intro: *magic_links_feature_intro
      next_steps_text: *magic_links_next_steps_text
      feature_manual_navigation: *magic_links_feature_manual_navigation
     
    - howtoname: "twitter-login"
      title: How to add Twitter login to a Python Django application
      description: It is easy to add login with Twitter to your Python Django application. You'll integrate FusionAuth and then configure a Twitter Identity Provider.
      feature: Twitter login
      feature_singular: Twitter login
      feature_title: Twitter Login
      feature_icon_name: twitter-login.png
      technology_icon_name: python-django.png
      technology: Python Django
      technology_slug: python-django
      code_language: python
      feature_config_script_location: add-twitter-login.py
      feature_config_script_content_location: https://raw.githubusercontent.com/FusionAuth/fusionauth-example-client-libraries/main/python/add-twitter-login.py
      feature_config_command: 'fusionauth_api_key=<your API key> python add-twitter-login.py'
      sample_app_url: http://localhost:8000
      admin_feature_image_file: /assets/img/howto/screenshots/adminui/twitter-login.png
      user_feature_image_file: /assets/img/howto/screenshots/userui/twitter-login.png
      feature_intro: *twitter_login_feature_intro
      next_steps_text: *twitter_login_next_steps_text
      feature_manual_navigation: *twitter_login_feature_manual_navigation

